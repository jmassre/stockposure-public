{"ast":null,"code":"import styled from 'styled-components';\nvar FlexGapSupportedClassName = 'flex-gap-supported';\nvar FlexGapNotSupportedClassName = 'flex-gap-not-supported';\nvar boxPropsArr = ['sizing', 'position', 'zIndex', 'outline', 'overflow', 'overflowX', 'overflowY', 'height', 'maxHeight', 'minHeight', 'width', 'maxWidth', 'minWidth', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'm', 'mt', 'mr', 'mb', 'ml', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'p', 'pt', 'pr', 'pb', 'pl', 'border', 'borderTop', 'borderRight', 'borderBottom', 'borderLeft', 'b', 'bt', 'br', 'bb', 'bl'];\nvar flexBoxPropsArr = ['inline', 'wrap', 'reverse', 'wrapReverse', 'column', 'center', 'justifyContent', 'justifyItems', 'alignItems', 'alignContent', 'gap', 'columnGap', 'rowGap'];\nvar flexItemPropsArr = ['box', 'order', 'grow', 'shrink', 'basis', 'flex', 'alignSelf', 'justifySelf'];\nvar boxProps = boxPropsArr.slice();\nvar flexBoxProps = flexBoxPropsArr.slice();\nvar flexItemProps = flexItemPropsArr.slice().concat(flexBoxProps);\n\nif (typeof document !== 'undefined') {\n  var executeOnDomReady = function executeOnDomReady(callback) {\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', function () {\n        return callback();\n      });\n    } else {\n      callback();\n    }\n  };\n\n  executeOnDomReady(function () {\n    var htmlDocument = document;\n    var htmlBody = htmlDocument.body;\n    var bodyClassList = htmlBody.classList;\n\n    var flexGapSupported = function flexGapSupported() {\n      var PARENT_WIDTH = 10;\n      var GAP = 4;\n      /* create test node */\n\n      var parent = htmlDocument.createElement('div');\n      parent.style.visibility = 'hidden';\n      parent.style.height = '1px';\n      parent.style.width = PARENT_WIDTH + \"px\";\n      parent.style.display = 'flex';\n      parent.style.gap = GAP + \"px\";\n      parent.innerHTML = '<div id=\"react-styled-flex-gap-detector-element\" style=\"flex:1\"></div><div style=\"flex:1\"></div>';\n      /* carry out tests */\n\n      htmlBody.appendChild(parent);\n\n      var _window$getComputedSt = window.getComputedStyle(parent.firstElementChild),\n          width = _window$getComputedSt.width;\n\n      htmlBody.removeChild(parent);\n      /* Remove node and return result */\n\n      return Math.round(parseFloat(width)) === (PARENT_WIDTH - GAP) / 2;\n    };\n\n    if (flexGapSupported()) {\n      bodyClassList.add(FlexGapSupportedClassName);\n      bodyClassList.remove(FlexGapNotSupportedClassName);\n    } else {\n      bodyClassList.add(FlexGapNotSupportedClassName);\n      bodyClassList.remove(FlexGapSupportedClassName);\n    }\n  });\n}\n\nvar FlexGapSupportedIdentifier = \".\" + FlexGapSupportedClassName + \" &&\";\nvar FlexGapNotSupportedIdentifier = \".\" + FlexGapNotSupportedClassName + \" &&\";\n\nvar boxModelStyles = function boxModelStyles(props) {\n  return {\n    boxSizing: props.sizing,\n    position: props.position,\n    height: props.height,\n    zIndex: props.zIndex,\n    outline: props.outline,\n    overflow: props.overflow,\n    overflowX: props.overflowX,\n    overflowY: props.overflowY,\n    maxHeight: props.maxHeight,\n    minHeight: props.minHeight,\n    width: props.width,\n    maxWidth: props.maxWidth,\n    minWidth: props.minWidth,\n    margin: props.margin || props.m,\n    marginTop: props.marginTop || props.mt,\n    marginRight: props.marginRight || props.mr,\n    marginBottom: props.marginBottom || props.mb,\n    marginLeft: props.marginLeft || props.ml,\n    padding: props.padding || props.p,\n    paddingTop: props.paddingTop || props.pt,\n    paddingRight: props.paddingRight || props.pr,\n    paddingBottom: props.paddingBottom || props.pb,\n    paddingLeft: props.paddingLeft || props.pl,\n    border: props.border || props.b,\n    borderTop: props.borderTop || props.bt,\n    borderRight: props.borderRight || props.br,\n    borderBottom: props.borderBottom || props.bb,\n    borderLeft: props.borderLeft || props.bl\n  };\n};\n\nvar flexStyles = function flexStyles(props) {\n  var inline = props.inline,\n      wrapReverse = props.wrapReverse,\n      alignContent = props.alignContent,\n      justifyItems = props.justifyItems,\n      column = props.column,\n      reverse = props.reverse,\n      wrap = props.wrap,\n      gap = props.gap,\n      columnGap = props.columnGap,\n      rowGap = props.rowGap,\n      center = props.center;\n  var display = inline ? 'inline-flex' : 'flex';\n  var justifyContent = props.justifyContent,\n      alignItems = props.alignItems;\n  var flexDirection;\n  var flexWrap;\n\n  if (center) {\n    justifyContent = justifyContent || 'center';\n    alignItems = alignItems || 'center';\n  }\n\n  if (column || reverse) {\n    flexDirection = column ? 'column' : 'row';\n    flexDirection += reverse ? '-reverse' : '';\n  }\n\n  if (wrap) flexWrap = 'wrap';\n  if (wrapReverse) flexWrap = 'wrap-reverse';\n  var result = {\n    display: display,\n    flexWrap: flexWrap,\n    justifyContent: justifyContent,\n    alignItems: alignItems,\n    flexDirection: flexDirection,\n    alignContent: alignContent,\n    justifyItems: justifyItems\n  };\n\n  if (gap || columnGap || rowGap) {\n    result[FlexGapSupportedIdentifier] = {\n      gap: gap,\n      rowGap: rowGap,\n      columnGap: columnGap\n    };\n    if (wrap) ;else {\n      var _ref, _result$FlexGapNotSup;\n\n      var marginProp = column ? 'bottom' : 'right';\n      var child = reverse ? 'first' : 'last';\n      var gapProp = (column ? rowGap : columnGap) || gap;\n      result[FlexGapNotSupportedIdentifier] = (_result$FlexGapNotSup = {}, _result$FlexGapNotSup[\"& > :not(:\" + child + \"-child)\"] = (_ref = {}, _ref[\"margin-\" + marginProp] = gapProp, _ref), _result$FlexGapNotSup);\n    }\n  }\n\n  return result;\n};\n\nvar flexItemStyles = function flexItemStyles(props) {\n  return {\n    order: props.order,\n    flex: props.flex,\n    alignSelf: props.alignSelf,\n    justifySelf: props.justifySelf,\n    flexBasis: props.basis,\n    flexShrink: props.shrink,\n    flexGrow: props.grow\n  };\n};\n\nvar Box = styled('div').withConfig({\n  displayName: 'Box',\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return boxProps.indexOf(prop) === -1;\n  }\n})(boxModelStyles);\nvar FlexBox = styled(Box).withConfig({\n  displayName: 'FlexBox',\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return flexBoxProps.indexOf(prop) === -1;\n  }\n})(flexStyles);\nvar FlexItem = styled(Box).withConfig({\n  displayName: 'FlexItem',\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return flexItemProps.indexOf(prop) === -1;\n  }\n})(flexItemStyles, function (props) {\n  return props.box ? flexStyles : '';\n});\nexport { Box, FlexBox, FlexGapNotSupportedClassName, FlexGapSupportedClassName, FlexItem };","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/node_modules/react-styled-flex/src/constants.ts","/Users/joey/Desktop/etf-holdings-site/node_modules/react-styled-flex/src/detect-flex-gap-support.ts","/Users/joey/Desktop/etf-holdings-site/node_modules/react-styled-flex/src/index.ts"],"names":["FlexGapSupportedClassName","FlexGapNotSupportedClassName","boxPropsArr","flexBoxPropsArr","flexItemPropsArr","boxProps","flexBoxProps","flexItemProps","executeOnDomReady","document","callback","htmlDocument","htmlBody","bodyClassList","flexGapSupported","PARENT_WIDTH","GAP","parent","width","window","Math","parseFloat","FlexGapSupportedIdentifier","FlexGapNotSupportedIdentifier","boxModelStyles","boxSizing","props","position","height","zIndex","outline","overflow","overflowX","overflowY","maxHeight","minHeight","maxWidth","minWidth","margin","marginTop","marginRight","marginBottom","marginLeft","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","border","borderTop","borderRight","borderBottom","borderLeft","bl","flexStyles","inline","wrapReverse","alignContent","justifyItems","column","reverse","wrap","gap","columnGap","rowGap","center","display","justifyContent","alignItems","flexDirection","flexWrap","result","marginProp","child","gapProp","flexItemStyles","order","flex","alignSelf","justifySelf","flexBasis","flexShrink","flexGrow","grow","Box","displayName","shouldForwardProp","FlexBox","FlexItem"],"mappings":";IAAaA,yBAAyB,GAAG,oB;IAC5BC,4BAA4B,GAAG,wB;AAErC,IAAMC,WAAW,GAAG,CAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,YAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,YAAA,EAAA,cAAA,EAAA,eAAA,EAAA,aAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,EAAA,cAAA,EAAA,YAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAApB,IAAoB,CAApB;AACA,IAAMC,eAAe,GAAG,CAAA,QAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,YAAA,EAAA,cAAA,EAAA,KAAA,EAAA,WAAA,EAAxB,QAAwB,CAAxB;AACA,IAAMC,gBAAgB,GAAG,CAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,MAAA,EAAA,WAAA,EAAzB,aAAyB,CAAzB;AAEA,IAAMC,QAAQ,GAAaH,WAAW,CAAtC,KAA2BA,EAA3B;AACA,IAAMI,YAAY,GAAaH,eAAe,CAA9C,KAA+BA,EAA/B;AACA,IAAMI,aAAa,GAAIH,gBAAgB,CAAhBA,KAAAA,GAAAA,MAAAA,CAAvB,YAAuBA,CAAvB;;ACPP,IAAI,OAAA,QAAA,KAAJ,WAAA,EAAqC;AACjC,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,QAAA,EAAA;AACtB,QAAIC,QAAQ,CAARA,UAAAA,KAAJ,SAAA,EAAuC;AACnCA,MAAAA,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAA8C,YAAA;AAAA,eAAMC,QAAN,EAAA;AAA9CD,OAAAA;AADJ,KAAA,MAGK;AACDC,MAAAA,QAAQ;AACX;AANL,GAAA;;AASAF,EAAAA,iBAAiB,CAAC,YAAA;AACd,QAAMG,YAAY,GAAlB,QAAA;AACA,QAAMC,QAAQ,GAAGD,YAAY,CAA7B,IAAA;AACA,QAAME,aAAa,GAAGD,QAAQ,CAA9B,SAAA;;AAEA,QAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAA;AACrB,UAAMC,YAAY,GAAlB,EAAA;AACA,UAAMC,GAAG,GAAT,CAAA;AACA;;AACA,UAAMC,MAAM,GAAGN,YAAY,CAAZA,aAAAA,CAAf,KAAeA,CAAf;AACAM,MAAAA,MAAM,CAANA,KAAAA,CAAAA,UAAAA,GAAAA,QAAAA;AACAA,MAAAA,MAAM,CAANA,KAAAA,CAAAA,MAAAA,GAAAA,KAAAA;AACAA,MAAAA,MAAM,CAANA,KAAAA,CAAAA,KAAAA,GAAwBF,YAAxBE,GAAAA,IAAAA;AACAA,MAAAA,MAAM,CAANA,KAAAA,CAAAA,OAAAA,GAAAA,MAAAA;AACAA,MAAAA,MAAM,CAANA,KAAAA,CAAAA,GAAAA,GAAsBD,GAAtBC,GAAAA,IAAAA;AACAA,MAAAA,MAAM,CAANA,SAAAA,GAAAA,kGAAAA;AAEA;;AACAL,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,MAAAA;;kCACkBO,MAAM,CAANA,gBAAAA,CAAwBF,MAAM,CAA9BE,iBAAAA,C;UAAVD,KAAAA,GAAAA,qBAAAA,CAAAA,K;;AACRN,MAAAA,QAAQ,CAARA,WAAAA,CAAAA,MAAAA;AAEA;;AACA,aAAOQ,IAAI,CAAJA,KAAAA,CAAWC,UAAU,CAArBD,KAAqB,CAArBA,MAAkC,CAACL,YAAY,GAAb,GAAA,IAAzC,CAAA;AAlBJ,KAAA;;AAqBA,QAAID,gBAAJ,EAAA,EAAwB;AACpBD,MAAAA,aAAa,CAAbA,GAAAA,CAAAA,yBAAAA;AACAA,MAAAA,aAAa,CAAbA,MAAAA,CAAAA,4BAAAA;AAFJ,KAAA,MAIK;AACDA,MAAAA,aAAa,CAAbA,GAAAA,CAAAA,4BAAAA;AACAA,MAAAA,aAAa,CAAbA,MAAAA,CAAAA,yBAAAA;AACH;AAjCLL,GAAiB,CAAjBA;AAmCH;;AC1CD,IAAMc,0BAA0B,GAAA,MAAA,yBAAA,GAAhC,KAAA;AACA,IAAMC,6BAA6B,GAAA,MAAA,4BAAA,GAAnC,KAAA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA;AAAA,SAAiC;AACpDC,IAAAA,SAAS,EAAEC,KAAK,CADoC,MAAA;AAEpDC,IAAAA,QAAQ,EAAED,KAAK,CAFqC,QAAA;AAGpDE,IAAAA,MAAM,EAAEF,KAAK,CAHuC,MAAA;AAIpDG,IAAAA,MAAM,EAAEH,KAAK,CAJuC,MAAA;AAKpDI,IAAAA,OAAO,EAAEJ,KAAK,CALsC,OAAA;AAMpDK,IAAAA,QAAQ,EAAEL,KAAK,CANqC,QAAA;AAOpDM,IAAAA,SAAS,EAAEN,KAAK,CAPoC,SAAA;AAQpDO,IAAAA,SAAS,EAAEP,KAAK,CARoC,SAAA;AASpDQ,IAAAA,SAAS,EAAER,KAAK,CAToC,SAAA;AAUpDS,IAAAA,SAAS,EAAET,KAAK,CAVoC,SAAA;AAWpDR,IAAAA,KAAK,EAAEQ,KAAK,CAXwC,KAAA;AAYpDU,IAAAA,QAAQ,EAAEV,KAAK,CAZqC,QAAA;AAapDW,IAAAA,QAAQ,EAAEX,KAAK,CAbqC,QAAA;AAcpDY,IAAAA,MAAM,EAAEZ,KAAK,CAALA,MAAAA,IAAgBA,KAAK,CAduB,CAAA;AAepDa,IAAAA,SAAS,EAAEb,KAAK,CAALA,SAAAA,IAAmBA,KAAK,CAfiB,EAAA;AAgBpDc,IAAAA,WAAW,EAAEd,KAAK,CAALA,WAAAA,IAAqBA,KAAK,CAhBa,EAAA;AAiBpDe,IAAAA,YAAY,EAAEf,KAAK,CAALA,YAAAA,IAAsBA,KAAK,CAjBW,EAAA;AAkBpDgB,IAAAA,UAAU,EAAEhB,KAAK,CAALA,UAAAA,IAAoBA,KAAK,CAlBe,EAAA;AAmBpDiB,IAAAA,OAAO,EAAEjB,KAAK,CAALA,OAAAA,IAAiBA,KAAK,CAnBqB,CAAA;AAoBpDkB,IAAAA,UAAU,EAAElB,KAAK,CAALA,UAAAA,IAAoBA,KAAK,CApBe,EAAA;AAqBpDmB,IAAAA,YAAY,EAAEnB,KAAK,CAALA,YAAAA,IAAsBA,KAAK,CArBW,EAAA;AAsBpDoB,IAAAA,aAAa,EAAEpB,KAAK,CAALA,aAAAA,IAAuBA,KAAK,CAtBS,EAAA;AAuBpDqB,IAAAA,WAAW,EAAErB,KAAK,CAALA,WAAAA,IAAqBA,KAAK,CAvBa,EAAA;AAwBpDsB,IAAAA,MAAM,EAAEtB,KAAK,CAALA,MAAAA,IAAgBA,KAAK,CAxBuB,CAAA;AAyBpDuB,IAAAA,SAAS,EAAEvB,KAAK,CAALA,SAAAA,IAAmBA,KAAK,CAzBiB,EAAA;AA0BpDwB,IAAAA,WAAW,EAAExB,KAAK,CAALA,WAAAA,IAAqBA,KAAK,CA1Ba,EAAA;AA2BpDyB,IAAAA,YAAY,EAAEzB,KAAK,CAALA,YAAAA,IAAsBA,KAAK,CA3BW,EAAA;AA4BpD0B,IAAAA,UAAU,EAAE1B,KAAK,CAALA,UAAAA,IAAoBA,KAAK,CAAC2B;AA5Bc,GAAjC;AAAvB,CAAA;;AA+BA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAA;MACPC,MAAAA,GACqC7B,KAAAA,CADrC6B,M;MAAQC,WAAAA,GAC6B9B,KAAAA,CAD7B8B,W;MAAaC,YAAAA,GACgB/B,KAAAA,CADhB+B,Y;MAAcC,YAAAA,GACEhC,KAAAA,CADFgC,Y;MAAcC,MAAAA,GACZjC,KAAAA,CADYiC,M;MAAQC,OAAAA,GACpBlC,KAAAA,CADoBkC,O;MAC7DC,IAAAA,GAAyCnC,KAAAA,CAAzCmC,I;MAAMC,GAAAA,GAAmCpC,KAAAA,CAAnCoC,G;MAAKC,SAAAA,GAA8BrC,KAAAA,CAA9BqC,S;MAAWC,MAAAA,GAAmBtC,KAAAA,CAAnBsC,M;MAAQC,MAAAA,GAAWvC,KAAAA,CAAXuC,M;AAClC,MAAMC,OAAO,GAAGX,MAAM,GAAA,aAAA,GAAtB,MAAA;MAGMY,cAAAA,GAA+BzC,KAAAA,CAA/ByC,c;MAAgBC,UAAAA,GAAe1C,KAAAA,CAAf0C,U;AACtB,MAAA,aAAA;AACA,MAAA,QAAA;;AAEA,MAAA,MAAA,EAAY;AACRD,IAAAA,cAAc,GAAGA,cAAc,IAA/BA,QAAAA;AACAC,IAAAA,UAAU,GAAGA,UAAU,IAAvBA,QAAAA;AACH;;AAED,MAAIT,MAAM,IAAV,OAAA,EAAuB;AACnBU,IAAAA,aAAa,GAAGV,MAAM,GAAA,QAAA,GAAtBU,KAAAA;AACAA,IAAAA,aAAa,IAAIT,OAAO,GAAA,UAAA,GAAxBS,EAAAA;AACH;;AAED,MAAA,IAAA,EAAUC,QAAQ,GAARA,MAAAA;AACV,MAAA,WAAA,EAAiBA,QAAQ,GAARA,cAAAA;AAEjB,MAAMC,MAAM,GAAc;AACtBL,IAAAA,OAAO,EADe,OAAA;AAEtBI,IAAAA,QAAQ,EAFc,QAAA;AAGtBH,IAAAA,cAAc,EAHQ,cAAA;AAItBC,IAAAA,UAAU,EAJY,UAAA;AAKtBC,IAAAA,aAAa,EALS,aAAA;AAMtBZ,IAAAA,YAAY,EANU,YAAA;AAOtBC,IAAAA,YAAY,EAAZA;AAPsB,GAA1B;;AAUA,MAAII,GAAG,IAAHA,SAAAA,IAAJ,MAAA,EAAgC;AAC5BS,IAAAA,MAAM,CAANA,0BAAM,CAANA,GAAqC;AACjCT,MAAAA,GAAG,EAD8B,GAAA;AAC5BE,MAAAA,MAAM,EADsB,MAAA;AACpBD,MAAAA,SAAS,EAATA;AADoB,KAArCQ;AAGA,QAAA,IAAA,EAAA,CAAA,KAMK;AAAA,UAAA,IAAA,EAAA,qBAAA;;AACD,UAAMC,UAAU,GAAGb,MAAM,GAAA,QAAA,GAAzB,OAAA;AACA,UAAMc,KAAK,GAAGb,OAAO,GAAA,OAAA,GAArB,MAAA;AACA,UAAMc,OAAO,GAAG,CAACf,MAAM,GAAA,MAAA,GAAP,SAAA,KAAhB,GAAA;AACAY,MAAAA,MAAM,CAANA,6BAAM,CAANA,IAAAA,qBAAAA,GAAAA,EAAAA,EAAAA,qBAAAA,CAAAA,eAAAA,KAAAA,GAAAA,SAAAA,CAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,CAAAA,YAAAA,UAAAA,CAAAA,GAAAA,OAAAA,EAAAA,IAAAA,CAAAA,EAAAA,qBAAAA;AAKH;AACJ;;AAED,SAAA,MAAA;AAvDJ,CAAA;;AA0DA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA;AAAA,SAA0C;AAC7DC,IAAAA,KAAK,EAAElD,KAAK,CADiD,KAAA;AAE7DmD,IAAAA,IAAI,EAAEnD,KAAK,CAFkD,IAAA;AAG7DoD,IAAAA,SAAS,EAAEpD,KAAK,CAH6C,SAAA;AAI7DqD,IAAAA,WAAW,EAAErD,KAAK,CAJ2C,WAAA;AAK7DsD,IAAAA,SAAS,EAAEtD,KAAK,CAL6C,KAAA;AAM7DuD,IAAAA,UAAU,EAAEvD,KAAK,CAN4C,MAAA;AAO7DwD,IAAAA,QAAQ,EAAExD,KAAK,CAACyD;AAP6C,GAA1C;AAAvB,CAAA;;IAUaC,GAAG,GAAG,MAAM,CAAN,KAAM,CAAN,CAAA,UAAA,CAAyB;AACxCC,EAAAA,WAAW,EAD6B,KAAA;AAExCC,EAAAA,iBAAiB,EAAE,SAAA,iBAAA,CAAA,IAAA,EAAI;AAAA,WAAIjF,QAAQ,CAARA,OAAAA,CAAAA,IAAAA,MAA2B,CAA/B,CAAA;AAAA;AAFiB,CAAzB,EAAA,cAAA,C;IAKNkF,OAAO,GAAG,MAAM,CAAN,GAAM,CAAN,CAAA,UAAA,CAAuB;AAC1CF,EAAAA,WAAW,EAD+B,SAAA;AAE1CC,EAAAA,iBAAiB,EAAE,SAAA,iBAAA,CAAA,IAAA,EAAI;AAAA,WAAIhF,YAAY,CAAZA,OAAAA,CAAAA,IAAAA,MAA+B,CAAnC,CAAA;AAAA;AAFmB,CAAvB,EAAA,UAAA,C;IAKVkF,QAAQ,GAAG,MAAM,CAAN,GAAM,CAAN,CAAA,UAAA,CAAuB;AAC3CH,EAAAA,WAAW,EADgC,UAAA;AAE3CC,EAAAA,iBAAiB,EAAE,SAAA,iBAAA,CAAA,IAAA,EAAI;AAAA,WAAI/E,aAAa,CAAbA,OAAAA,CAAAA,IAAAA,MAAgC,CAApC,CAAA;AAAA;AAFoB,CAAvB,EAAA,cAAA,EAKpB,UAAA,KAAA,EAAK;AAAA,SAAKmB,KAAK,CAALA,GAAAA,GAAAA,UAAAA,GAAL,EAAA;AALe,CAAA,C","sourcesContent":["export const FlexGapSupportedClassName = 'flex-gap-supported';\r\nexport const FlexGapNotSupportedClassName = 'flex-gap-not-supported';\r\n\r\nexport const boxPropsArr = ['sizing', 'position', 'zIndex', 'outline', 'overflow', 'overflowX', 'overflowY', 'height', 'maxHeight', 'minHeight', 'width', 'maxWidth', 'minWidth', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'm', 'mt', 'mr', 'mb', 'ml', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'p', 'pt', 'pr', 'pb', 'pl', 'border', 'borderTop', 'borderRight', 'borderBottom', 'borderLeft', 'b', 'bt', 'br', 'bb', 'bl'] as const;\r\nexport const flexBoxPropsArr = ['inline', 'wrap', 'reverse', 'wrapReverse', 'column', 'center', 'justifyContent', 'justifyItems', 'alignItems', 'alignContent', 'gap', 'columnGap', 'rowGap'] as const;\r\nexport const flexItemPropsArr = ['box', 'order', 'grow', 'shrink', 'basis', 'flex', 'alignSelf', 'justifySelf'] as const;\r\n\r\nexport const boxProps: string[] = boxPropsArr.slice();\r\nexport const flexBoxProps: string[] = flexBoxPropsArr.slice();\r\nexport const flexItemProps = (flexItemPropsArr.slice() as string[]).concat(flexBoxProps);\r\n","import { FlexGapNotSupportedClassName, FlexGapSupportedClassName } from './constants';\r\n\r\nif (typeof document !== 'undefined') {\r\n    const executeOnDomReady = (callback: ()=>void) => {\r\n        if (document.readyState === 'loading') {\r\n            document.addEventListener('DOMContentLoaded', () => callback());\r\n        }\r\n        else {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    executeOnDomReady(() => {\r\n        const htmlDocument = document;\r\n        const htmlBody = htmlDocument.body;\r\n        const bodyClassList = htmlBody.classList;\r\n\r\n        const flexGapSupported = () => {\r\n            const PARENT_WIDTH = 10;\r\n            const GAP = 4;\r\n            /* create test node */\r\n            const parent = htmlDocument.createElement('div');\r\n            parent.style.visibility = 'hidden';\r\n            parent.style.height = '1px';\r\n            parent.style.width = `${PARENT_WIDTH}px`;\r\n            parent.style.display = 'flex';\r\n            parent.style.gap = `${GAP}px`;\r\n            parent.innerHTML = '<div id=\"react-styled-flex-gap-detector-element\" style=\"flex:1\"></div><div style=\"flex:1\"></div>';\r\n\r\n            /* carry out tests */\r\n            htmlBody.appendChild(parent);\r\n            const { width } = window.getComputedStyle(parent.firstElementChild);\r\n            htmlBody.removeChild(parent);\r\n\r\n            /* Remove node and return result */\r\n            return Math.round(parseFloat(width)) === (PARENT_WIDTH - GAP) / 2;\r\n        };\r\n\r\n        if (flexGapSupported()) {\r\n            bodyClassList.add(FlexGapSupportedClassName);\r\n            bodyClassList.remove(FlexGapNotSupportedClassName);\r\n        }\r\n        else {\r\n            bodyClassList.add(FlexGapNotSupportedClassName);\r\n            bodyClassList.remove(FlexGapSupportedClassName);\r\n        }\r\n    });\r\n}\r\n","import styled, { CSSProperties, CSSObject } from 'styled-components';\r\nimport { FlexGapSupportedClassName, FlexGapNotSupportedClassName, boxProps, flexBoxProps, flexItemProps } from './constants';\r\nimport './detect-flex-gap-support';\r\nimport { BoxProps, FlexBoxProps, FlexItemProps, FlexItemBaseProps } from './types';\r\n\r\nconst FlexGapSupportedIdentifier = `.${FlexGapSupportedClassName} &&`;\r\nconst FlexGapNotSupportedIdentifier = `.${FlexGapNotSupportedClassName} &&`;\r\n\r\nconst boxModelStyles = (props: BoxProps): CSSObject => ({\r\n    boxSizing: props.sizing,\r\n    position: props.position,\r\n    height: props.height,\r\n    zIndex: props.zIndex,\r\n    outline: props.outline,\r\n    overflow: props.overflow,\r\n    overflowX: props.overflowX,\r\n    overflowY: props.overflowY,\r\n    maxHeight: props.maxHeight,\r\n    minHeight: props.minHeight,\r\n    width: props.width,\r\n    maxWidth: props.maxWidth,\r\n    minWidth: props.minWidth,\r\n    margin: props.margin || props.m,\r\n    marginTop: props.marginTop || props.mt,\r\n    marginRight: props.marginRight || props.mr,\r\n    marginBottom: props.marginBottom || props.mb,\r\n    marginLeft: props.marginLeft || props.ml,\r\n    padding: props.padding || props.p,\r\n    paddingTop: props.paddingTop || props.pt,\r\n    paddingRight: props.paddingRight || props.pr,\r\n    paddingBottom: props.paddingBottom || props.pb,\r\n    paddingLeft: props.paddingLeft || props.pl,\r\n    border: props.border || props.b,\r\n    borderTop: props.borderTop || props.bt,\r\n    borderRight: props.borderRight || props.br,\r\n    borderBottom: props.borderBottom || props.bb,\r\n    borderLeft: props.borderLeft || props.bl,\r\n});\r\n\r\nconst flexStyles = (props: FlexBoxProps): CSSObject => {\r\n    const { inline, wrapReverse, alignContent, justifyItems, column, reverse,\r\n        wrap, gap, columnGap, rowGap, center } = props;\r\n    const display = inline\r\n        ? 'inline-flex'\r\n        : 'flex';\r\n    let { justifyContent, alignItems } = props;\r\n    let flexDirection: CSSProperties['flexDirection'];\r\n    let flexWrap: CSSProperties['flexWrap'];\r\n\r\n    if (center) {\r\n        justifyContent = justifyContent || 'center';\r\n        alignItems = alignItems || 'center';\r\n    }\r\n\r\n    if (column || reverse) {\r\n        flexDirection = column ? 'column' : 'row';\r\n        flexDirection += reverse ? '-reverse' : '';\r\n    }\r\n\r\n    if (wrap) flexWrap = 'wrap';\r\n    if (wrapReverse) flexWrap = 'wrap-reverse';\r\n\r\n    const result: CSSObject = {\r\n        display,\r\n        flexWrap,\r\n        justifyContent,\r\n        alignItems,\r\n        flexDirection,\r\n        alignContent,\r\n        justifyItems,\r\n    };\r\n\r\n    if (gap || columnGap || rowGap) {\r\n        result[FlexGapSupportedIdentifier] = {\r\n            gap, rowGap, columnGap,\r\n        };\r\n        if (wrap) {\r\n            /**\r\n             * Gap in wrap mode is not supported yet\r\n             * If you have any better suggestions please create an issue or contribute by raising PR\r\n            */\r\n        }\r\n        else {\r\n            const marginProp = column ? 'bottom' : 'right';\r\n            const child = reverse ? 'first' : 'last';\r\n            const gapProp = (column ? rowGap : columnGap) || gap;\r\n            result[FlexGapNotSupportedIdentifier] = {\r\n                [`& > :not(:${child}-child)`]: {\r\n                    [`margin-${marginProp}`]: gapProp,\r\n                },\r\n            };\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst flexItemStyles = (props: FlexItemBaseProps): CSSObject => ({\r\n    order: props.order,\r\n    flex: props.flex,\r\n    alignSelf: props.alignSelf,\r\n    justifySelf: props.justifySelf,\r\n    flexBasis: props.basis,\r\n    flexShrink: props.shrink,\r\n    flexGrow: props.grow,\r\n});\r\n\r\nexport const Box = styled('div').withConfig({\r\n    displayName: 'Box',\r\n    shouldForwardProp: prop => boxProps.indexOf(prop) === -1,\r\n})<BoxProps>(boxModelStyles);\r\n\r\nexport const FlexBox = styled(Box).withConfig({\r\n    displayName: 'FlexBox',\r\n    shouldForwardProp: prop => flexBoxProps.indexOf(prop) === -1,\r\n})<FlexBoxProps>(flexStyles);\r\n\r\nexport const FlexItem = styled(Box).withConfig({\r\n    displayName: 'FlexItem',\r\n    shouldForwardProp: prop => flexItemProps.indexOf(prop) === -1,\r\n})<FlexItemProps>(\r\n    flexItemStyles,\r\n    props => (props.box ? flexStyles : ''),\r\n);\r\n\r\nexport { FlexGapSupportedClassName, FlexGapNotSupportedClassName };\r\nexport { BoxProps, FlexBoxProps, FlexItemProps };\r\n"]},"metadata":{},"sourceType":"module"}