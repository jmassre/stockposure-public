{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/etf-holdings-site/src/TableCustom.js\";\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { ButtonStyle, TopFlex, FlexItem, LastText, Title, TotalButton, ErrorLabel, SubTitle, PageColor } from './StyledComponents.js';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableCustom(props) {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: props.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.rows.slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: props.columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 33\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: props.rows.length,\n      rowsPerPage: props.rowsPerPage,\n      page: props.page,\n      onPageChange: props.handleChangePage,\n      onRowsPerPageChange: props.handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TableCustom;\nexport default TableCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCustom\");","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/src/TableCustom.js"],"names":["Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","ButtonStyle","TopFlex","FlexItem","LastText","Title","TotalButton","ErrorLabel","SubTitle","PageColor","React","TableCustom","props","width","overflow","maxHeight","columns","map","column","align","minWidth","label","id","rows","slice","page","rowsPerPage","row","value","format","code","length","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport {ButtonStyle,TopFlex, FlexItem,LastText, Title,TotalButton,ErrorLabel,SubTitle, PageColor} from './StyledComponents.js';\nimport * as React from 'react';\n\n\nfunction TableCustom(props){\n\n    return(\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 500 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {props.columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.rows\n                    .slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage)\n                    .map((row) => {\n                        return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                            {props.columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                                <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === 'number'\n                                    ? column.format(value)\n                                    : value}\n                                </TableCell>\n                            );\n                            })}\n                        </TableRow>\n                        );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={props.rows.length}\n                rowsPerPage={props.rowsPerPage}\n                page={props.page}\n                onPageChange={props.handleChangePage}\n                onRowsPerPageChange={props.handleChangeRowsPerPage}\n            />\n        </Paper>\n    )\n\n\n}\n\nexport default TableCustom;"]},"metadata":{},"sourceType":"module"}