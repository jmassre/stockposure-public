{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/etf-holdings-site/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Inputs } from './StyledComponents.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const [isValidStockTicker, setIsValidStockTicker] = useState(true);\n  const [isValidETFTicker, setIsValidETFTicker] = useState(true);\n\n  async function sendGetRequest(etfValues, etfShares, stockValues, stockShares) {\n    let stocks = {};\n    let etfs = [];\n    let individualStocks = [];\n    let totalOverallValue = 0;\n\n    for (let i = 0; i < etfValues.length; i++) {\n      etfs.push({\n        \"etf\": etfValues[i][\"ticker\"],\n        \"value\": etfValues[i][\"value\"]\n      });\n      totalOverallValue += etfValues[i][\"value\"];\n    }\n\n    for (let i = 0; i < etfShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        console.log(\"H\");\n        etfs.push({\n          \"etf\": etfShares[i][\"ticker\"],\n          \"value\": etfShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += etfShares[i][\"shares\"] * response.data[0][\"price\"];\n      }).catch(function (error) {\n        setIsValidETFTicker(false);\n      });\n      ;\n    } //now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\n\n    for (let i = 0; i < stockValues.length; i++) {\n      individualStocks.push({\n        \"stock\": stockValues[i][\"ticker\"],\n        \"value\": stockValues[i][\"value\"]\n      });\n      totalOverallValue += stockValues[i][\"value\"];\n    }\n\n    for (let i = 0; i < stockShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        individualStocks.push({\n          \"stock\": stockShares[i][\"ticker\"],\n          \"value\": stockShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += stockShares[i][\"shares\"] * response.data[0][\"price\"];\n      }).catch(function (error) {\n        setIsValidStockTicker(false);\n      });\n    }\n\n    console.log(totalOverallValue); //now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\n    for (let i = 0; i < etfs.length; i++) {\n      await axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`).then(response => {\n        for (let j = 0; j < response.data.length; j++) {\n          stocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue + stocks[response.data[j][\"asset\"]] : response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue;\n        }\n      }).catch(function (error) {\n        setIsValidETFTicker(false);\n      });\n      ;\n    }\n\n    for (let i = 0; i < individualStocks.length; i++) {\n      stocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? individualStocks[i][\"value\"] / totalOverallValue + stocks[individualStocks[i][\"stock\"]] : individualStocks[i][\"value\"] / totalOverallValue;\n    }\n\n    return stocks;\n  }\n\n  ;\n  const [formValues, setFormValues] = useState([{\n    \"type\": \"ETF\",\n    \"ETFStock\": \"\",\n    \"value\": \"Shares\",\n    \"ValueShare\": \"\"\n  }]);\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      \"type\": \"ETF\",\n      \"ETFStock\": \"\",\n      \"value\": \"Shares\",\n      \"ValueShare\": \"\"\n    }]);\n  };\n\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  function isNumeric(value) {\n    return /^-?\\d+$/.test(value);\n  }\n\n  const [triedSubmit, setTriedSubmit] = useState(false);\n  const [empty, setEmpty] = useState(false);\n  const [isNumber, setIsNumber] = useState(true);\n\n  let handleSubmit = event => {\n    setIsNumber(true);\n    setIsValidStockTicker(true);\n    setIsValidETFTicker(true);\n    setEmpty(false);\n    event.preventDefault();\n    setTriedSubmit(true);\n    let getOut = false;\n    formValues.forEach(function (item, index) {\n      console.log(typeof item[\"ValueShare\"]);\n\n      if (item[\"ETFStock\"] === \"\" || item[\"ValueShare\"] === \"\") {\n        setEmpty(true);\n        getOut = true;\n        return;\n      }\n\n      if (isNumeric(item[\"ValueShare\"]) === false) {\n        console.log(\"e\");\n        setIsNumber(false);\n        getOut = true;\n        return;\n      }\n    });\n\n    if (getOut === false) {\n      let etfShares = [];\n      let etfValues = [];\n      let stockShares = [];\n      let stockValues = [];\n\n      for (let i = 0; i < formValues.length; i++) {\n        if (formValues[i][\"type\"] === \"ETF\" && formValues[i][\"value\"] === \"Shares\") {\n          etfShares.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"shares\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        } else if (formValues[i][\"type\"] === \"ETF\" && formValues[i][\"value\"] === \"$ Value\") {\n          etfValues.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"value\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        } else if (formValues[i][\"type\"] === \"Stock\" && formValues[i][\"value\"] === \"Shares\") {\n          stockShares.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"shares\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        } else if (formValues[i][\"type\"] === \"Stock\" && formValues[i][\"value\"] === \"$ Value\") {\n          stockValues.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"value\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        }\n      }\n\n      let percentages = sendGetRequest(etfValues, etfShares, stockValues, stockShares);\n      percentages.then(function (result) {\n        console.log(etfValues, etfShares, stockValues, stockShares);\n        let entries = Object.entries(result);\n        let sorted = entries.sort((a, b) => b[1] - a[1]);\n        console.log(sorted);\n      });\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    /*#__PURE__*/\n    // <form className={classes.root} noValidate autoComplete=\"off\">\n    // \t<TextField id=\"standard-basic\" label=\"Standard\" />\n    // \t<TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n    // \t<TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n    // \t</form>\n    _jsxDEV(Inputs, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onSubmit: handleSubmit,\n        children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            onChange: e => handleChange(index, e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ETF\",\n              children: \"ETF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Stock\",\n              children: \"Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            type: \"text\",\n            name: \"ETFStock\",\n            value: element.ETFStock || \"\",\n            onChange: e => handleChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"value\",\n            onChange: e => handleChange(index, e),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Shares\",\n              children: \"Shares\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"$ Value\",\n              children: \"$ Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            type: \"text\",\n            name: \"ValueShare\",\n            value: element.ValueShare || \"\",\n            onChange: e => handleChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 5\n          }, this), index > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"button\",\n            className: \"button remove\",\n            onClick: () => removeFormFields(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 5\n          }, this) : null]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)), triedSubmit && empty ? /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"All inputs must be filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 28\n        }, this) : triedSubmit && isNumber === false ? /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Value input must be a valid number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 106\n        }, this) : triedSubmit && isValidStockTicker === false ? /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ensure that it is a valid stock ticker!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 200\n        }, this) : triedSubmit && isValidETFTicker === false ? /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ensure that it is a valid ETF!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 295\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: \"button add\",\n            type: \"button\",\n            onClick: () => addFormFields(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            className: \"button submit\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 3\n    }, this)\n  );\n}\n\n_s(App, \"VS2ku5x220QyHnoCRiKVhUP6Bnk=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/src/App.js"],"names":["React","useState","styled","makeStyles","TextField","Button","InputLabel","MenuItem","FormHelperText","FormControl","Select","Inputs","axios","require","useStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","App","props","isValidStockTicker","setIsValidStockTicker","isValidETFTicker","setIsValidETFTicker","sendGetRequest","etfValues","etfShares","stockValues","stockShares","stocks","etfs","individualStocks","totalOverallValue","i","length","push","get","then","response","console","log","data","catch","error","j","formValues","setFormValues","handleChange","e","newFormValues","target","name","value","addFormFields","removeFormFields","splice","isNumeric","test","triedSubmit","setTriedSubmit","empty","setEmpty","isNumber","setIsNumber","handleSubmit","event","preventDefault","getOut","forEach","item","index","parseFloat","percentages","result","entries","Object","sorted","sort","a","b","classes","map","element","ETFStock","ValueShare"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport {Inputs} from './StyledComponents.js';\n\nconst axios = require('axios');\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t  '& > *': {\n\t\tmargin: theme.spacing(1),\n\t\twidth: '25ch',\n\t  },\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t  },\n\t  selectEmpty: {\n\t\tmarginTop: theme.spacing(2),\n\t  },\n  }));\n  \n \nfunction App(props) {\n\t\n\tconst [isValidStockTicker, setIsValidStockTicker] = useState(true);\n\tconst [isValidETFTicker, setIsValidETFTicker] = useState(true);\n\n\tasync function sendGetRequest(etfValues, etfShares, stockValues, stockShares){\n\t\tlet stocks = {};\n\t\tlet etfs = [];\n\t\tlet individualStocks=[];\n\t\tlet totalOverallValue=0;\n\t\tfor (let i=0; i<etfValues.length;i++){\n\t\t\tetfs.push({\"etf\": etfValues[i][\"ticker\"], \"value\": etfValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=etfValues[i][\"value\"];\n\t\t}\n\t\tfor (let i=0; i<etfShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(\"H\");\n\t\t\t\tetfs.push({\"etf\": etfShares[i][\"ticker\"], \"value\": etfShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\ttotalOverallValue+=etfShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t})\n\t\t\t.catch(function (error){\n\t\t\t\tsetIsValidETFTicker(false);\n\t\t\t});;\n\t\t}\n\n\t\t//now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\t\tfor (let i=0;i<stockValues.length;i++){\n\t\t\tindividualStocks.push({\"stock\": stockValues[i][\"ticker\"], \"value\":stockValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=stockValues[i][\"value\"];\n\t\t}\n\t\t\n\n\t\tfor (let i=0;i<stockShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t\n\t\t\t\t\tindividualStocks.push({\"stock\": stockShares[i][\"ticker\"], \"value\": stockShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\t\ttotalOverallValue+=stockShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t\t})\n\t\t\t\t.catch(function (error){\n\t\t\t\t\tsetIsValidStockTicker(false);\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(totalOverallValue);\n\t\t//now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\t\tfor(let i=0 ;i<etfs.length;i++){\n\t\t\tawait axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`)\n\t\t\t.then((response) => {\n\t\t\t\tfor (let j=0;j<response.data.length;j++){\n\t\t\t\t\tstocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? ((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue + stocks[response.data[j][\"asset\"]] : ((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error){\n\t\t\t\tsetIsValidETFTicker(false);\n\t\t\t});;       \n\t\t}\n\t  \n\t\tfor (let i=0;i<individualStocks.length;i++){\n\t\t\tstocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? individualStocks[i][\"value\"]/totalOverallValue + stocks[individualStocks[i][\"stock\"]]: individualStocks[i][\"value\"]/totalOverallValue;\n\t\t}\n\t\t\n\t\treturn stocks;\n\t\t\n\t};\n\t\n\t\n\t\n\tconst [formValues, setFormValues] = useState([{ \"type\": \"ETF\", \"ETFStock\" : \"\", \"value\":\"Shares\", \"ValueShare\":\"\"}])\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n\t  }\n\t \n    \n    let addFormFields = () => {\n        setFormValues([...formValues, { \"type\": \"ETF\", \"ETFStock\" : \"\", \"value\":\"Shares\", \"ValueShare\":\"\"}])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n\t}\n\tfunction isNumeric(value) {\n\t\treturn /^-?\\d+$/.test(value);\n\t}\n\tconst [triedSubmit, setTriedSubmit] = useState(false);\n\tconst [empty, setEmpty] = useState(false);\n\tconst [isNumber, setIsNumber] = useState(true);\n    let handleSubmit = (event) => {\n\t\tsetIsNumber(true);\n\t\tsetIsValidStockTicker(true);\n\t\tsetIsValidETFTicker(true);\n\t\tsetEmpty(false);\n\t\tevent.preventDefault();\n\t\tsetTriedSubmit(true);\n\t\tlet getOut=false;\n\t\tformValues.forEach(function (item, index) {\n\t\t\tconsole.log(typeof(item[\"ValueShare\"]))\n\t\t\tif(item[\"ETFStock\"]===\"\" || item[\"ValueShare\"]===\"\"){\n\t\t\t\tsetEmpty(true);\n\t\t\t\tgetOut=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(isNumeric(item[\"ValueShare\"])===false){\n\t\t\t\tconsole.log(\"e\")\n\t\t\t\tsetIsNumber(false);\n\t\t\t\tgetOut=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t});\n\t\tif(getOut===false){\n\t\t\tlet etfShares=[];\n\t\t\tlet etfValues=[];\n\t\t\tlet stockShares=[];\n\t\t\tlet stockValues=[];\n\t\t\tfor (let i=0;i<formValues.length;i++){\n\t\t\t\tif(formValues[i][\"type\"]===\"ETF\" && formValues[i][\"value\"]===\"Shares\"){\n\t\t\t\t\tetfShares.push({\"ticker\":formValues[i][\"ETFStock\"], \"shares\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t\telse if(formValues[i][\"type\"]===\"ETF\" && formValues[i][\"value\"]===\"$ Value\"){\n\t\t\t\t\tetfValues.push({\"ticker\":formValues[i][\"ETFStock\"], \"value\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t\telse if(formValues[i][\"type\"]===\"Stock\" && formValues[i][\"value\"]===\"Shares\"){\n\t\t\t\t\tstockShares.push({\"ticker\":formValues[i][\"ETFStock\"], \"shares\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t\telse if(formValues[i][\"type\"]===\"Stock\" && formValues[i][\"value\"]===\"$ Value\"){\n\t\t\t\t\tstockValues.push({\"ticker\":formValues[i][\"ETFStock\"], \"value\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tlet percentages = sendGetRequest(etfValues, etfShares, stockValues, stockShares);\n\t\t\t\n\t\t\tpercentages.then(function(result) {\n\t\t\t\tconsole.log(etfValues, etfShares, stockValues, stockShares);\n\t\t\t\tlet entries = Object.entries(result);\n\t\t\t\tlet sorted = entries.sort((a, b) => b[1] - a[1]);\n\t\t\t\tconsole.log(sorted);\n\t\t\t})\n\t\t}\n\t\t\n    }\n\t\n\tconst classes = useStyles();\n\t\n\n\n\treturn (\n\t\t\n\t\t\t// <form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t// \t<TextField id=\"standard-basic\" label=\"Standard\" />\n\t\t\t// \t<TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n\t\t\t// \t<TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\n\t\t\t// \t</form>\n\t\t\n\t\t<Inputs>\n\t\t<form  className={classes.root} onSubmit={handleSubmit}>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n\t\t\t\t\n            <select name=\"type\" onChange={e => handleChange(index, e)}>\n                <option value=\"ETF\">ETF</option>\n                <option value=\"Stock\">Stock</option>\n            </select> \n              <TextField id=\"outlined-basic\" variant =\"outlined\" type=\"text\" name=\"ETFStock\" value={element.ETFStock || \"\"} onChange={e => handleChange(index, e)} />\n\t\t\t \n\t\t\t  \n            <select name=\"value\" onChange={e => handleChange(index, e)}>\n                <option value=\"Shares\">Shares</option>\n                <option value=\"$ Value\">$ Value</option>\n            </select>\n\t\t\t\t<TextField id=\"outlined-basic\" variant =\"outlined\" type=\"text\" name=\"ValueShare\" value={element.ValueShare || \"\"} onChange={e => handleChange(index, e)} />\n              {\n\t\t\t\tindex>0 ? \n\t\t\t\t<Button variant=\"contained\" type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</Button>\n                : null\n              }\n            </div>\n          ))}\n\t\t  {triedSubmit && empty? <label>All inputs must be filled</label> :  triedSubmit && isNumber===false ? <label>Value input must be a valid number</label>: triedSubmit && isValidStockTicker===false? <label>Ensure that it is a valid stock ticker!</label>:triedSubmit && isValidETFTicker===false?<label>Ensure that it is a valid ETF!</label>:\"\"}\n          <div className=\"button-section\">\n\t\t\t<Button variant=\"contained\" color=\"primary\" className=\"button add\" type=\"button\" onClick={() => addFormFields()}>\n\t\t\t\tAdd\n\t\t\t</Button>\n\t\t\t<Button variant=\"contained\" color=\"primary\" className=\"button submit\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</Button>\n              \n          </div>\n\t\t\n      </form>\n\t  </Inputs>\n  \t);\n}\t\t\n\nexport default App;"]},"metadata":{},"sourceType":"module"}