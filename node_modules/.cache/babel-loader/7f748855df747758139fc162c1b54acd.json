{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/etf-holdings-site/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction App() {\n  async function sendGetRequest(etfValues, etfShares, stockValues, stockShares) {\n    let stocks = {};\n    let etfs = [];\n    let individualStocks = [];\n    let totalOverallValue = 0;\n\n    for (let i = 0; i < etfValues.length; i++) {\n      etfs.push({\n        \"etf\": etfValues[i][\"ticker\"],\n        \"value\": etfValues[i][\"value\"]\n      });\n      totalOverallValue += etfValues[i][\"value\"];\n    }\n\n    for (let i = 0; i < etfShares.length; i++) {\n      try {\n        await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n          console.log(\"H\");\n          etfs.push({\n            \"etf\": etfShares[i][\"ticker\"],\n            \"value\": etfShares[i][\"shares\"] * response.data[0][\"price\"]\n          });\n          totalOverallValue += etfShares[i][\"shares\"] * response.data[0][\"price\"];\n        });\n        console.log(\"d\");\n      } catch {\n        console.log(\"HNSDFCUN\");\n      }\n    } //now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\n\n    for (let i = 0; i < stockValues.length; i++) {\n      individualStocks.push({\n        \"stock\": stockValues[i][\"ticker\"],\n        \"value\": stockValues[i][\"value\"]\n      });\n      totalOverallValue += stockValues[i][\"value\"];\n    }\n\n    for (let i = 0; i < stockShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        individualStocks.push({\n          \"stock\": stockShares[i][\"ticker\"],\n          \"value\": stockShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += stockShares[i][\"shares\"] * response.data[0][\"price\"];\n      });\n    } //now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\n\n    for (let i = 0; i < etfs.length; i++) {\n      await axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`).then(response => {\n        for (let j = 0; j < response.data.length; j++) {\n          stocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue + stocks[response.data[j][\"asset\"]] : response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue;\n        }\n      });\n    }\n\n    for (let i = 0; i < individualStocks.length; i++) {\n      stocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? individualStocks[i][\"value\"] / totalOverallValue + stocks[individualStocks[i][\"stock\"]] : individualStocks[i][\"value\"] / totalOverallValue;\n    }\n\n    return stocks;\n  }\n\n  ;\n  let percentages = sendGetRequest([{\n    \"ticker\": \"SPY\",\n    \"value\": 50\n  }], [{\n    \"ticker\": \"SPY\",\n    \"shares\": 1\n  }], [{\n    \"ticker\": \"AAPL\",\n    \"value\": 50\n  }], [{\n    \"ticker\": \"AAPL\",\n    \"shares\": 1\n  }]);\n  percentages.then(function (result) {\n    console.log(result);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hey!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/src/App.js"],"names":["axios","require","App","sendGetRequest","etfValues","etfShares","stockValues","stockShares","stocks","etfs","individualStocks","totalOverallValue","i","length","push","get","then","response","console","log","data","j","percentages","result"],"mappings":"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","sourcesContent":["const axios = require('axios');\n\nfunction App() {\n\tasync function sendGetRequest(etfValues, etfShares, stockValues, stockShares){\n\t\tlet stocks = {};\n\t\tlet etfs = [];\n\t\tlet individualStocks=[];\n\t\tlet totalOverallValue=0;\n\t\tfor (let i=0; i<etfValues.length;i++){\n\t\t\tetfs.push({\"etf\": etfValues[i][\"ticker\"], \"value\": etfValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=etfValues[i][\"value\"];\n\t\t}\n\t\tfor (let i=0; i<etfShares.length;i++){\n\t\t\ttry{\n\t\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(\"H\");\n\t\t\t\t\tetfs.push({\"etf\": etfShares[i][\"ticker\"], \"value\": etfShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\t\ttotalOverallValue+=etfShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t\t});\n\t\t\t\tconsole.log(\"d\");\n\t\t\t}\n\t\t\tcatch{\n\t\t\t\tconsole.log(\"HNSDFCUN\");\n\t\t\t}\n\t\t}\n\t  \n\t\t//now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\t\tfor (let i=0;i<stockValues.length;i++){\n\t\t\tindividualStocks.push({\"stock\": stockValues[i][\"ticker\"], \"value\":stockValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=stockValues[i][\"value\"];\n\t\t}\n\t\tfor (let i=0;i<stockShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tindividualStocks.push({\"stock\": stockShares[i][\"ticker\"], \"value\": stockShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\t\ttotalOverallValue+=stockShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t\t});\n\t\t}\n\t\t//now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\t  \n\t  \n\t\tfor(let i=0 ;i<etfs.length;i++){\n\t\t\tawait axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`)\n\t\t\t.then((response) => {\n\t\t\t\tfor (let j=0;j<response.data.length;j++){\n\t\t\t\t\tstocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? ((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue + stocks[response.data[j][\"asset\"]] : ((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue;\n\t\t\t\t}\n\t\t\t});       \n\t\t}\n\t  \n\t\tfor (let i=0;i<individualStocks.length;i++){\n\t\t\tstocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? individualStocks[i][\"value\"]/totalOverallValue + stocks[individualStocks[i][\"stock\"]]: individualStocks[i][\"value\"]/totalOverallValue;\n\t\t}\n\t\treturn stocks;\n\t\t\n\t  };\n\t  \n\t  let percentages = sendGetRequest([{\"ticker\": \"SPY\", \"value\":50}], [{\"ticker\": \"SPY\", \"shares\":1 }], [{\"ticker\": \"AAPL\", \"value\":50}], [{\"ticker\": \"AAPL\", \"shares\":1}]);\n\t  \n\t  percentages.then(function(result) {\n\t\tconsole.log(result);\n\t  })\n\treturn (\n\t\t<h1>Hey!</h1>\n  \t);\n}\t\t\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}