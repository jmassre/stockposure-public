{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/etf-holdings-site/src/App.js\",\n    _s = $RefreshSig$();\n\nimport InputSection from './InputSection.js';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nfunction App(props) {\n  _s();\n\n  async function sendGetRequest(etfValues, etfShares, stockValues, stockShares) {\n    let stocks = {};\n    let etfs = [];\n    let individualStocks = [];\n    let totalOverallValue = 0;\n\n    for (let i = 0; i < etfValues.length; i++) {\n      etfs.push({\n        \"etf\": etfValues[i][\"ticker\"],\n        \"value\": etfValues[i][\"value\"]\n      });\n      totalOverallValue += etfValues[i][\"value\"];\n    }\n\n    console.log(totalOverallValue);\n\n    for (let i = 0; i < etfShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        console.log(\"H\");\n        etfs.push({\n          \"etf\": etfShares[i][\"ticker\"],\n          \"value\": etfShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += etfShares[i][\"shares\"] * response.data[0][\"price\"];\n      });\n    }\n\n    console.log(totalOverallValue); //now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\n    for (let i = 0; i < stockValues.length; i++) {\n      individualStocks.push({\n        \"stock\": stockValues[i][\"ticker\"],\n        \"value\": stockValues[i][\"value\"]\n      });\n      totalOverallValue += stockValues[i][\"value\"];\n    }\n\n    console.log(totalOverallValue);\n\n    for (let i = 0; i < stockShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][0][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        console.log(stockShares[i][0]);\n        console.log(response.data);\n        individualStocks.push({\n          \"stock\": stockShares[i][\"ticker\"],\n          \"value\": stockShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += stockShares[i][0][\"shares\"] * response.data[0][\"price\"];\n      });\n    }\n\n    console.log(totalOverallValue); //now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\n    for (let i = 0; i < etfs.length; i++) {\n      await axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`).then(response => {\n        for (let j = 0; j < response.data.length; j++) {\n          stocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue + stocks[response.data[j][\"asset\"]] : response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue;\n        }\n      });\n    }\n\n    for (let i = 0; i < individualStocks.length; i++) {\n      stocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? individualStocks[i][\"value\"] / totalOverallValue + stocks[individualStocks[i][\"stock\"]] : individualStocks[i][\"value\"] / totalOverallValue;\n    }\n\n    return stocks;\n  }\n\n  ;\n  const [formValues, setFormValues] = useState([{\n    \"type\": \"ETF\",\n    \"ETFStock\": \"\",\n    \"value\": \"Shares\",\n    \"ValueShare\": \"\"\n  }]);\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      \"type\": \"ETF\",\n      \"ETFStock\": \"\",\n      \"value\": \"Shares\",\n      \"ValueShare\": \"\"\n    }]);\n  };\n\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  let handleSubmit = event => {\n    event.preventDefault();\n    let etfShares = [];\n    let etfValues = [];\n    let stockShares = [];\n    let stockValues = [];\n\n    for (let i = 0; i < formValues.length; i++) {\n      if (formValues[i][\"type\"] === \"ETF\" && formValues[i][\"value\"] === \"Shares\") {\n        etfShares.push({\n          \"ticker\": formValues[i][\"ETFStock\"],\n          \"shares\": parseFloat(formValues[i][\"ValueShare\"])\n        });\n      } else if (formValues[i][\"type\"] === \"ETF\" && formValues[i][\"value\"] === \"$ Value\") {\n        etfValues.push({\n          \"ticker\": formValues[i][\"ETFStock\"],\n          \"value\": parseFloat(formValues[i][\"ValueShare\"])\n        });\n      } else if (formValues[i][\"type\"] === \"Stock\" && formValues[i][\"value\"] === \"Shares\") {\n        stockShares.push({\n          \"ticker\": formValues[i][\"ETFStock\"],\n          \"shares\": parseFloat(formValues[i][\"ValueShare\"])\n        });\n      } else if (formValues[i][\"type\"] === \"Stock\" && formValues[i][\"value\"] === \"$ Value\") {\n        stockValues.push({\n          \"ticker\": formValues[i][\"ETFStock\"],\n          \"value\": parseFloat(formValues[i][\"ValueShare\"])\n        });\n      }\n    }\n\n    let percentages = sendGetRequest(etfValues, etfShares, stockValues, [stockShares]);\n    percentages.then(function (result) {\n      //alert(JSON.stringify(result));\n      console.log(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inline\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: e => handleChange(index, e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ETF\",\n          children: \"ETF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Stock\",\n          children: \"Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ETFStock\",\n        value: element.ETFStock || \"\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"value\",\n        onChange: e => handleChange(index, e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shares\",\n          children: \"Shares\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"$ Value\",\n          children: \"$ Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"ValueShare\",\n        value: element.ValueShare || \"\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this), index > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"button remove\",\n        onClick: () => removeFormFields(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button add\",\n        type: \"button\",\n        onClick: () => addFormFields(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button submit\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"LmRATzyGpmfGXhJM5+Hgq9RqEKk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/src/App.js"],"names":["InputSection","React","useState","useEffect","axios","require","App","props","sendGetRequest","etfValues","etfShares","stockValues","stockShares","stocks","etfs","individualStocks","totalOverallValue","i","length","push","console","log","get","then","response","data","j","formValues","setFormValues","handleChange","e","newFormValues","target","name","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","parseFloat","percentages","result","map","element","index","ETFStock","ValueShare"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AACnB,iBAAeC,cAAf,CAA8BC,SAA9B,EAAyCC,SAAzC,EAAoDC,WAApD,EAAiEC,WAAjE,EAA6E;AAC5E,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,gBAAgB,GAAC,EAArB;AACA,QAAIC,iBAAiB,GAAC,CAAtB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACR,SAAS,CAACS,MAA1B,EAAiCD,CAAC,EAAlC,EAAqC;AACpCH,MAAAA,IAAI,CAACK,IAAL,CAAU;AAAC,eAAOV,SAAS,CAACQ,CAAD,CAAT,CAAa,QAAb,CAAR;AAAgC,iBAASR,SAAS,CAACQ,CAAD,CAAT,CAAa,OAAb;AAAzC,OAAV;AACAD,MAAAA,iBAAiB,IAAEP,SAAS,CAACQ,CAAD,CAAT,CAAa,OAAb,CAAnB;AACA;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACP,SAAS,CAACQ,MAA1B,EAAiCD,CAAC,EAAlC,EAAqC;AACpC,YAAMb,KAAK,CAACkB,GAAN,CAAW,wDAAuDZ,SAAS,CAACO,CAAD,CAAT,CAAa,QAAb,CAAuB,0CAAzF,EACLM,IADK,CACCC,QAAD,IAAc;AACnBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAP,QAAAA,IAAI,CAACK,IAAL,CAAU;AAAC,iBAAOT,SAAS,CAACO,CAAD,CAAT,CAAa,QAAb,CAAR;AAAgC,mBAASP,SAAS,CAACO,CAAD,CAAT,CAAa,QAAb,IAAuBO,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiB,OAAjB;AAAhE,SAAV;AACAT,QAAAA,iBAAiB,IAAEN,SAAS,CAACO,CAAD,CAAT,CAAa,QAAb,IAAuBO,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiB,OAAjB,CAA1C;AACA,OALK,CAAN;AAMA;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ,EAlB4E,CAoB5E;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACN,WAAW,CAACO,MAA3B,EAAkCD,CAAC,EAAnC,EAAsC;AACrCF,MAAAA,gBAAgB,CAACI,IAAjB,CAAsB;AAAC,iBAASR,WAAW,CAACM,CAAD,CAAX,CAAe,QAAf,CAAV;AAAoC,iBAAQN,WAAW,CAACM,CAAD,CAAX,CAAe,OAAf;AAA5C,OAAtB;AACAD,MAAAA,iBAAiB,IAAEL,WAAW,CAACM,CAAD,CAAX,CAAe,OAAf,CAAnB;AACA;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACL,WAAW,CAACM,MAA3B,EAAkCD,CAAC,EAAnC,EAAsC;AACrC,YAAMb,KAAK,CAACkB,GAAN,CAAW,wDAAuDV,WAAW,CAACK,CAAD,CAAX,CAAe,CAAf,EAAkB,QAAlB,CAA4B,0CAA9F,EACJM,IADI,CACEC,QAAD,IAAc;AACnBJ,QAAAA,OAAO,CAACC,GAAR,CAAYT,WAAW,CAACK,CAAD,CAAX,CAAe,CAAf,CAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB;AACAV,QAAAA,gBAAgB,CAACI,IAAjB,CAAsB;AAAC,mBAASP,WAAW,CAACK,CAAD,CAAX,CAAe,QAAf,CAAV;AAAoC,mBAASL,WAAW,CAACK,CAAD,CAAX,CAAe,QAAf,IAAyBO,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiB,OAAjB;AAAtE,SAAtB;AACAT,QAAAA,iBAAiB,IAAEJ,WAAW,CAACK,CAAD,CAAX,CAAe,CAAf,EAAkB,QAAlB,IAA4BO,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiB,OAAjB,CAA/C;AACA,OANI,CAAN;AAOA;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYL,iBAAZ,EApC4E,CAqC5E;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,IAAI,CAACI,MAApB,EAA2BD,CAAC,EAA5B,EAA+B;AAC9B,YAAMb,KAAK,CAACkB,GAAN,CAAW,yCAAwCR,IAAI,CAACG,CAAD,CAAJ,CAAQ,KAAR,CAAe,0CAAlE,EACLM,IADK,CACCC,QAAD,IAAc;AACnB,aAAK,IAAIE,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,QAAQ,CAACC,IAAT,CAAcP,MAA7B,EAAoCQ,CAAC,EAArC,EAAwC;AACvCb,UAAAA,MAAM,CAACW,QAAQ,CAACC,IAAT,CAAcC,CAAd,EAAiB,OAAjB,CAAD,CAAN,GAAoCb,MAAM,CAACW,QAAQ,CAACC,IAAT,CAAcC,CAAd,EAAiB,OAAjB,CAAD,CAAN,GAAsCF,QAAQ,CAACC,IAAT,CAAcC,CAAd,EAAiB,kBAAjB,IAAqC,GAAtC,GAA2CZ,IAAI,CAACG,CAAD,CAAJ,CAAQ,OAAR,CAA5C,GAA8DD,iBAA9D,GAAkFH,MAAM,CAACW,QAAQ,CAACC,IAAT,CAAcC,CAAd,EAAiB,OAAjB,CAAD,CAA5H,GAA4JF,QAAQ,CAACC,IAAT,CAAcC,CAAd,EAAiB,kBAAjB,IAAqC,GAAtC,GAA2CZ,IAAI,CAACG,CAAD,CAAJ,CAAQ,OAAR,CAA5C,GAA8DD,iBAA5P;AACA;AACD,OALK,CAAN;AAMA;;AAED,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACF,gBAAgB,CAACG,MAAhC,EAAuCD,CAAC,EAAxC,EAA2C;AAC1CJ,MAAAA,MAAM,CAACE,gBAAgB,CAACE,CAAD,CAAhB,CAAoB,OAApB,CAAD,CAAN,GAAuCJ,MAAM,CAACE,gBAAgB,CAACE,CAAD,CAAhB,CAAoB,OAApB,CAAD,CAAN,GAAuCF,gBAAgB,CAACE,CAAD,CAAhB,CAAoB,OAApB,IAA6BD,iBAA7B,GAAiDH,MAAM,CAACE,gBAAgB,CAACE,CAAD,CAAhB,CAAoB,OAApB,CAAD,CAA9F,GAA8HF,gBAAgB,CAACE,CAAD,CAAhB,CAAoB,OAApB,IAA6BD,iBAAlM;AACA;;AACD,WAAOH,MAAP;AAEA;;AAAA;AAID,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,CAAC;AAAE,YAAQ,KAAV;AAAiB,gBAAa,EAA9B;AAAkC,aAAQ,QAA1C;AAAoD,kBAAa;AAAjE,GAAD,CAAD,CAA5C;;AAEG,MAAI2B,YAAY,GAAG,CAACZ,CAAD,EAAIa,CAAJ,KAAU;AACzB,QAAIC,aAAa,GAAG,CAAC,GAAGJ,UAAJ,CAApB;AACAI,IAAAA,aAAa,CAACd,CAAD,CAAb,CAAiBa,CAAC,CAACE,MAAF,CAASC,IAA1B,IAAkCH,CAAC,CAACE,MAAF,CAASE,KAA3C;AACAN,IAAAA,aAAa,CAACG,aAAD,CAAb;AACD,GAJH;;AAMA,MAAII,aAAa,GAAG,MAAM;AACtBP,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgB;AAAE,cAAQ,KAAV;AAAiB,kBAAa,EAA9B;AAAkC,eAAQ,QAA1C;AAAoD,oBAAa;AAAjE,KAAhB,CAAD,CAAb;AACD,GAFH;;AAIA,MAAIS,gBAAgB,GAAInB,CAAD,IAAO;AAC1B,QAAIc,aAAa,GAAG,CAAC,GAAGJ,UAAJ,CAApB;AACAI,IAAAA,aAAa,CAACM,MAAd,CAAqBpB,CAArB,EAAwB,CAAxB;AACAW,IAAAA,aAAa,CAACG,aAAD,CAAb;AACH,GAJD;;AAMA,MAAIO,YAAY,GAAIC,KAAD,IAAW;AAEhCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAI9B,SAAS,GAAC,EAAd;AACA,QAAID,SAAS,GAAC,EAAd;AACA,QAAIG,WAAW,GAAC,EAAhB;AACA,QAAID,WAAW,GAAC,EAAhB;;AACA,SAAK,IAAIM,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACU,UAAU,CAACT,MAA1B,EAAiCD,CAAC,EAAlC,EAAqC;AACpC,UAAGU,UAAU,CAACV,CAAD,CAAV,CAAc,MAAd,MAAwB,KAAxB,IAAiCU,UAAU,CAACV,CAAD,CAAV,CAAc,OAAd,MAAyB,QAA7D,EAAsE;AACrEP,QAAAA,SAAS,CAACS,IAAV,CAAe;AAAC,oBAASQ,UAAU,CAACV,CAAD,CAAV,CAAc,UAAd,CAAV;AAAqC,oBAASwB,UAAU,CAACd,UAAU,CAACV,CAAD,CAAV,CAAc,YAAd,CAAD;AAAxD,SAAf;AACA,OAFD,MAGK,IAAGU,UAAU,CAACV,CAAD,CAAV,CAAc,MAAd,MAAwB,KAAxB,IAAiCU,UAAU,CAACV,CAAD,CAAV,CAAc,OAAd,MAAyB,SAA7D,EAAuE;AAC3ER,QAAAA,SAAS,CAACU,IAAV,CAAe;AAAC,oBAASQ,UAAU,CAACV,CAAD,CAAV,CAAc,UAAd,CAAV;AAAqC,mBAAQwB,UAAU,CAACd,UAAU,CAACV,CAAD,CAAV,CAAc,YAAd,CAAD;AAAvD,SAAf;AACA,OAFI,MAGA,IAAGU,UAAU,CAACV,CAAD,CAAV,CAAc,MAAd,MAAwB,OAAxB,IAAmCU,UAAU,CAACV,CAAD,CAAV,CAAc,OAAd,MAAyB,QAA/D,EAAwE;AAC5EL,QAAAA,WAAW,CAACO,IAAZ,CAAiB;AAAC,oBAASQ,UAAU,CAACV,CAAD,CAAV,CAAc,UAAd,CAAV;AAAqC,oBAASwB,UAAU,CAACd,UAAU,CAACV,CAAD,CAAV,CAAc,YAAd,CAAD;AAAxD,SAAjB;AACA,OAFI,MAGA,IAAGU,UAAU,CAACV,CAAD,CAAV,CAAc,MAAd,MAAwB,OAAxB,IAAmCU,UAAU,CAACV,CAAD,CAAV,CAAc,OAAd,MAAyB,SAA/D,EAAyE;AAC7EN,QAAAA,WAAW,CAACQ,IAAZ,CAAiB;AAAC,oBAASQ,UAAU,CAACV,CAAD,CAAV,CAAc,UAAd,CAAV;AAAqC,mBAAQwB,UAAU,CAACd,UAAU,CAACV,CAAD,CAAV,CAAc,YAAd,CAAD;AAAvD,SAAjB;AACA;AACD;;AAED,QAAIyB,WAAW,GAAGlC,cAAc,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,WAAvB,EAAoC,CAACC,WAAD,CAApC,CAAhC;AAEA8B,IAAAA,WAAW,CAACnB,IAAZ,CAAiB,UAASoB,MAAT,EAAiB;AACjC;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,MAAZ;AACA,KAHD;AAIG,GA5BD;;AA8BH,sBACC;AAAO,IAAA,QAAQ,EAAEL,YAAjB;AAAA,eACSX,UAAU,CAACiB,GAAX,CAAe,CAACC,OAAD,EAAUC,KAAV,kBACd;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACA;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAEhB,CAAC,IAAID,YAAY,CAACiB,KAAD,EAAQhB,CAAR,CAA/C;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEe,OAAO,CAACE,QAAR,IAAoB,EAA9D;AAAkE,QAAA,QAAQ,EAAEjB,CAAC,IAAID,YAAY,CAACiB,KAAD,EAAQhB,CAAR;AAA7F;AAAA;AAAA;AAAA;AAAA,cALF,eAMA;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,QAAQ,EAAEA,CAAC,IAAID,YAAY,CAACiB,KAAD,EAAQhB,CAAR,CAAhD;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAUE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,KAAK,EAAEe,OAAO,CAACG,UAAR,IAAsB,EAAlE;AAAsE,QAAA,QAAQ,EAAElB,CAAC,IAAID,YAAY,CAACiB,KAAD,EAAQhB,CAAR;AAAjG;AAAA;AAAA;AAAA;AAAA,cAVF,EAYRgB,KAAK,GAAC,CAAN,gBACc;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAuB,QAAA,SAAS,EAAC,eAAjC;AAAiD,QAAA,OAAO,EAAE,MAAMV,gBAAgB,CAACU,KAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADd,GAEc,IAdN;AAAA,OAAkCA,KAAlC;AAAA;AAAA;AAAA;AAAA,YADD,CADT,eAoBQ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,IAAI,EAAC,QAApC;AAA6C,QAAA,OAAO,EAAE,MAAMX,aAAa,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA;;GApIQ7B,G;;KAAAA,G;AAsIT,eAAeA,GAAf","sourcesContent":["import InputSection from './InputSection.js';\nimport React, { useState, useEffect } from \"react\";\nconst axios = require('axios');\n\nfunction App(props) {\n\tasync function sendGetRequest(etfValues, etfShares, stockValues, stockShares){\n\t\tlet stocks = {};\n\t\tlet etfs = [];\n\t\tlet individualStocks=[];\n\t\tlet totalOverallValue=0;\n\t\tfor (let i=0; i<etfValues.length;i++){\n\t\t\tetfs.push({\"etf\": etfValues[i][\"ticker\"], \"value\": etfValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=etfValues[i][\"value\"];\n\t\t}\n\t\tconsole.log(totalOverallValue)\n\t\tfor (let i=0; i<etfShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(\"H\");\n\t\t\t\tetfs.push({\"etf\": etfShares[i][\"ticker\"], \"value\": etfShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\ttotalOverallValue+=etfShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t});\n\t\t}\n\t\tconsole.log(totalOverallValue)\n\n\t\t//now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\t\tfor (let i=0;i<stockValues.length;i++){\n\t\t\tindividualStocks.push({\"stock\": stockValues[i][\"ticker\"], \"value\":stockValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=stockValues[i][\"value\"];\n\t\t}\n\t\tconsole.log(totalOverallValue)\n\n\t\tfor (let i=0;i<stockShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][0][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(stockShares[i][0]);\n\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\tindividualStocks.push({\"stock\": stockShares[i][\"ticker\"], \"value\": stockShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\t\ttotalOverallValue+=stockShares[i][0][\"shares\"]*response.data[0][\"price\"];\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(totalOverallValue);\n\t\t//now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\t\tfor(let i=0 ;i<etfs.length;i++){\n\t\t\tawait axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`)\n\t\t\t.then((response) => {\n\t\t\t\tfor (let j=0;j<response.data.length;j++){\n\t\t\t\t\tstocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? ((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue + stocks[response.data[j][\"asset\"]] : ((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue;\n\t\t\t\t}\n\t\t\t});       \n\t\t}\n\t  \n\t\tfor (let i=0;i<individualStocks.length;i++){\n\t\t\tstocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? individualStocks[i][\"value\"]/totalOverallValue + stocks[individualStocks[i][\"stock\"]]: individualStocks[i][\"value\"]/totalOverallValue;\n\t\t}\n\t\treturn stocks;\n\t\t\n\t};\n\t\n\t\n\t\n\tconst [formValues, setFormValues] = useState([{ \"type\": \"ETF\", \"ETFStock\" : \"\", \"value\":\"Shares\", \"ValueShare\":\"\"}])\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setFormValues([...formValues, { \"type\": \"ETF\", \"ETFStock\" : \"\", \"value\":\"Shares\", \"ValueShare\":\"\"}])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n\n\t\tevent.preventDefault();\n\t\tlet etfShares=[];\n\t\tlet etfValues=[];\n\t\tlet stockShares=[];\n\t\tlet stockValues=[];\n\t\tfor (let i=0;i<formValues.length;i++){\n\t\t\tif(formValues[i][\"type\"]===\"ETF\" && formValues[i][\"value\"]===\"Shares\"){\n\t\t\t\tetfShares.push({\"ticker\":formValues[i][\"ETFStock\"], \"shares\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t}\n\t\t\telse if(formValues[i][\"type\"]===\"ETF\" && formValues[i][\"value\"]===\"$ Value\"){\n\t\t\t\tetfValues.push({\"ticker\":formValues[i][\"ETFStock\"], \"value\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t}\n\t\t\telse if(formValues[i][\"type\"]===\"Stock\" && formValues[i][\"value\"]===\"Shares\"){\n\t\t\t\tstockShares.push({\"ticker\":formValues[i][\"ETFStock\"], \"shares\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t}\n\t\t\telse if(formValues[i][\"type\"]===\"Stock\" && formValues[i][\"value\"]===\"$ Value\"){\n\t\t\t\tstockValues.push({\"ticker\":formValues[i][\"ETFStock\"], \"value\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t}\n\t\t}\n\n\t\tlet percentages = sendGetRequest(etfValues, etfShares, stockValues, [stockShares]);\n\t\t\n\t\tpercentages.then(function(result) {\n\t\t\t//alert(JSON.stringify(result));\n\t\t\tconsole.log(result);\n\t\t})\n    }\n\t\n\treturn (\n\t\t<form  onSubmit={handleSubmit}>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n            <select name=\"type\" onChange={e => handleChange(index, e)}>\n                <option value=\"ETF\">ETF</option>\n                <option value=\"Stock\">Stock</option>\n            </select> \n              <input type=\"text\" name=\"ETFStock\" value={element.ETFStock || \"\"} onChange={e => handleChange(index, e)} />\n            <select name=\"value\" onChange={e => handleChange(index, e)}>\n                <option value=\"Shares\">Shares</option>\n                <option value=\"$ Value\">$ Value</option>\n            </select>\n              <input type=\"text\" name=\"ValueShare\" value={element.ValueShare || \"\"} onChange={e => handleChange(index, e)} />\n              {\n\t\t\t\tindex>0 ? \n                  <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \n                : null\n              }\n            </div>\n          ))}\n          <div className=\"button-section\">\n              <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add</button>\n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n      </form>\n  \t);\n}\t\t\n\nexport default App;"]},"metadata":{},"sourceType":"module"}