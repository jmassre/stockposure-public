{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/etf-holdings-site/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { FlexBox } from \"react-styled-flex\";\nimport { DataGrid } from '@mui/x-data-grid';\nimport Button from '@material-ui/core/Button';\nimport { Inputs, ButtonStyle, IDK, FlexItem, LastText, Title, TotalButton, ErrorLabel } from './StyledComponents.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const [rows, setRows] = React.useState();\n  const [etfStockType, setEtfStockType] = React.useState('ETF');\n  const [unit, setUnit] = React.useState('Shares');\n  const [isValidStockTicker, setIsValidStockTicker] = useState(true);\n  const [isValidETFTicker, setIsValidETFTicker] = useState(true);\n\n  async function sendGetRequest(etfValues, etfShares, stockValues, stockShares) {\n    let stocks = {};\n    let etfs = [];\n    let individualStocks = [];\n    let totalOverallValue = 0;\n\n    for (let i = 0; i < etfValues.length; i++) {\n      etfs.push({\n        \"etf\": etfValues[i][\"ticker\"],\n        \"value\": etfValues[i][\"value\"]\n      });\n      totalOverallValue += etfValues[i][\"value\"];\n    }\n\n    for (let i = 0; i < etfShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        console.log(\"H\");\n        etfs.push({\n          \"etf\": etfShares[i][\"ticker\"],\n          \"value\": etfShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += etfShares[i][\"shares\"] * response.data[0][\"price\"];\n      }).catch(function (error) {\n        setIsValidETFTicker(false);\n      });\n      ;\n    } //now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\n\n    for (let i = 0; i < stockValues.length; i++) {\n      individualStocks.push({\n        \"stock\": stockValues[i][\"ticker\"],\n        \"value\": stockValues[i][\"value\"]\n      });\n      totalOverallValue += stockValues[i][\"value\"];\n    }\n\n    for (let i = 0; i < stockShares.length; i++) {\n      await axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`).then(response => {\n        individualStocks.push({\n          \"stock\": stockShares[i][\"ticker\"],\n          \"value\": stockShares[i][\"shares\"] * response.data[0][\"price\"]\n        });\n        totalOverallValue += stockShares[i][\"shares\"] * response.data[0][\"price\"];\n      }).catch(function (error) {\n        setIsValidStockTicker(false);\n      });\n    }\n\n    console.log(totalOverallValue); //now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\n    for (let i = 0; i < etfs.length; i++) {\n      await axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`).then(response => {\n        for (let j = 0; j < response.data.length; j++) {\n          stocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? [response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue + stocks[response.data[j][\"asset\"]], (response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue + stocks[response.data[j][\"asset\"]]) * totalOverallValue] : [response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue, response.data[j][\"weightPercentage\"] / 100 * etfs[i][\"value\"] / totalOverallValue * totalOverallValue];\n        }\n      }).catch(function (error) {\n        setIsValidETFTicker(false);\n      });\n      ;\n    }\n\n    for (let i = 0; i < individualStocks.length; i++) {\n      stocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? [individualStocks[i][\"value\"] / totalOverallValue + stocks[individualStocks[i][\"stock\"]], (individualStocks[i][\"value\"] / totalOverallValue + stocks[individualStocks[i][\"stock\"]]) * totalOverallValue] : [individualStocks[i][\"value\"] / totalOverallValue, individualStocks[i][\"value\"] / totalOverallValue * totalOverallValue];\n    }\n\n    console.log(stocks);\n    return stocks;\n  }\n\n  ;\n  const [formValues, setFormValues] = useState([{\n    \"type\": \"ETF\",\n    \"ETFStock\": \"\",\n    \"value\": \"Shares\",\n    \"ValueShare\": \"\"\n  }]);\n\n  function createData(id, ticker, percent, totalVal) {\n    return {\n      id,\n      ticker,\n      percent,\n      totalVal\n    };\n  }\n\n  let handleChange = (i, e) => {\n    let newFormValues = [...formValues];\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues); // setEtfStockType(newFormValues[i][\"type\"]);\n    // setUnit(newFormValues[i][\"value\"])\n  };\n\n  let addFormFields = () => {\n    setFormValues([...formValues, {\n      \"type\": \"ETF\",\n      \"ETFStock\": \"\",\n      \"value\": \"Shares\",\n      \"ValueShare\": \"\"\n    }]);\n    setIsNumber(true);\n    setIsValidStockTicker(true);\n    setIsValidETFTicker(true);\n    setEmpty(false);\n  };\n\n  let removeFormFields = i => {\n    let newFormValues = [...formValues];\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  function isNumeric(value) {\n    return /^-?\\d+$/.test(value);\n  }\n\n  const [triedSubmit, setTriedSubmit] = useState(false);\n  const [empty, setEmpty] = useState(false);\n  const [isNumber, setIsNumber] = useState(true);\n\n  let handleSubmit = event => {\n    setIsNumber(true);\n    setIsValidStockTicker(true);\n    setIsValidETFTicker(true);\n    setEmpty(false);\n    event.preventDefault();\n    setTriedSubmit(true);\n    let getOut = false;\n    formValues.forEach(function (item, index) {\n      console.log(typeof item[\"ValueShare\"]);\n\n      if (item[\"ETFStock\"] === \"\" || item[\"ValueShare\"] === \"\") {\n        setEmpty(true);\n        getOut = true;\n        return;\n      }\n\n      if (isNumeric(item[\"ValueShare\"]) === false) {\n        console.log(\"e\");\n        setIsNumber(false);\n        getOut = true;\n        return;\n      }\n    });\n\n    if (getOut === false) {\n      let etfShares = [];\n      let etfValues = [];\n      let stockShares = [];\n      let stockValues = [];\n\n      for (let i = 0; i < formValues.length; i++) {\n        if (formValues[i][\"type\"] === \"ETF\" && formValues[i][\"value\"] === \"Shares\") {\n          etfShares.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"shares\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        } else if (formValues[i][\"type\"] === \"ETF\" && formValues[i][\"value\"] === \"$ Value\") {\n          etfValues.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"value\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        } else if (formValues[i][\"type\"] === \"Stock\" && formValues[i][\"value\"] === \"Shares\") {\n          stockShares.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"shares\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        } else if (formValues[i][\"type\"] === \"Stock\" && formValues[i][\"value\"] === \"$ Value\") {\n          stockValues.push({\n            \"ticker\": formValues[i][\"ETFStock\"],\n            \"value\": parseFloat(formValues[i][\"ValueShare\"])\n          });\n        }\n      }\n\n      let percentages = sendGetRequest(etfValues, etfShares, stockValues, stockShares);\n      percentages.then(function (result) {\n        console.log(result);\n        let entries = Object.entries(result);\n        let sorted = entries.sort((a, b) => b[1] - a[1]);\n        let newRows = [];\n\n        for (let i = 0; i < sorted.length; i++) {\n          newRows.push(createData(i, sorted[i][0], sorted[i][1][0], sorted[i][1][1]));\n        }\n\n        setRows(newRows);\n        console.log(rows);\n      });\n    }\n  };\n\n  const classes = useStyles();\n  const columns = [{\n    field: \"ticker\",\n    headerName: \"Stock\",\n    width: 100\n  }, {\n    field: \"percentage\",\n    headerName: \"Percent of Portfolio\",\n    width: 200\n  }, {\n    filed: \"totalVal\",\n    headerName: \"$ Value\",\n    width: 150\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"ETF Holdings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(IDK, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onSubmit: handleSubmit,\n        children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inline\",\n          children: /*#__PURE__*/_jsxDEV(FlexBox, {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FlexItem, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  shrink: true,\n                  id: \"demo-simple-select-placeholder-label-label\",\n                  children: \"ETF or Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"type\",\n                  onChange: e => handleChange(index, e),\n                  labelId: \"demo-simple-select-placeholder-label-label\",\n                  id: \"demo-simple-select-placeholder-label\",\n                  displayEmpty: true,\n                  className: classes.selectEmpty,\n                  value: formValues[index][\"type\"],\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"ETF\",\n                    children: \"ETF\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 6\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Stock\",\n                    children: \"Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 6\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 6\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 4\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                style: {\n                  width: 150\n                },\n                id: \"outlined-basic\",\n                variant: \"outlined\",\n                type: \"text\",\n                name: \"ETFStock\",\n                value: element.ETFStock || \"\",\n                onChange: e => handleChange(index, e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  shrink: true,\n                  id: \"demo-simple-select-placeholder-label-label\",\n                  children: \"Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 4\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"value\",\n                  onChange: e => handleChange(index, e),\n                  labelId: \"demo-simple-select-placeholder-label-label\",\n                  id: \"demo-simple-select-placeholder-label\",\n                  displayEmpty: true,\n                  className: classes.selectEmpty,\n                  value: formValues[index][\"value\"],\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Shares\",\n                    children: \"Shares\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 5\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"$ Value\",\n                    children: \"$ Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 5\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 6\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n              children: /*#__PURE__*/_jsxDEV(LastText, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: 150\n                  },\n                  id: \"outlined-basic\",\n                  variant: \"outlined\",\n                  type: \"text\",\n                  name: \"ValueShare\",\n                  value: element.ValueShare || \"\",\n                  onChange: e => handleChange(index, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 4\n            }, this), index > 0 ? /*#__PURE__*/_jsxDEV(FlexItem, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"button\",\n                className: \"button remove\",\n                onClick: () => removeFormFields(index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 5\n            }, this) : /*#__PURE__*/_jsxDEV(FlexItem, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disabled: true,\n                type: \"button\",\n                className: \"button remove\",\n                onClick: () => removeFormFields(index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 4\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)), triedSubmit && empty ? /*#__PURE__*/_jsxDEV(ErrorLabel, {\n          children: \"All inputs must be filled\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 28\n        }, this) : triedSubmit && isNumber === false ? /*#__PURE__*/_jsxDEV(ErrorLabel, {\n          children: \"Value input must be a valid number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 115\n        }, this) : triedSubmit && isValidStockTicker === false ? /*#__PURE__*/_jsxDEV(ErrorLabel, {\n          children: \"Ensure that it is a valid stock ticker!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 219\n        }, this) : triedSubmit && isValidETFTicker === false ? /*#__PURE__*/_jsxDEV(ErrorLabel, {\n          children: \"Ensure that it is a valid ETF!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 324\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: /*#__PURE__*/_jsxDEV(TotalButton, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonStyle, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: ({\n                  width: 120\n                }, {\n                  height: 45\n                }),\n                variant: \"contained\",\n                color: \"primary\",\n                className: \"button add\",\n                type: \"button\",\n                onClick: () => addFormFields(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 4\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: ({\n                width: 120\n              }, {\n                height: 45\n              }),\n              variant: \"contained\",\n              color: \"primary\",\n              className: \"button submit\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        rowsPerPageOptions: [5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"EurdTc83sAH1TAqGXevtWelHjE4=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/src/App.js"],"names":["React","styled","TextField","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","FlexBox","DataGrid","Button","Inputs","ButtonStyle","IDK","FlexItem","LastText","Title","TotalButton","ErrorLabel","axios","require","useStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","App","props","rows","setRows","useState","etfStockType","setEtfStockType","unit","setUnit","isValidStockTicker","setIsValidStockTicker","isValidETFTicker","setIsValidETFTicker","sendGetRequest","etfValues","etfShares","stockValues","stockShares","stocks","etfs","individualStocks","totalOverallValue","i","length","push","get","then","response","console","log","data","catch","error","j","formValues","setFormValues","createData","id","ticker","percent","totalVal","handleChange","e","newFormValues","target","name","value","addFormFields","setIsNumber","setEmpty","removeFormFields","splice","isNumeric","test","triedSubmit","setTriedSubmit","empty","isNumber","handleSubmit","event","preventDefault","getOut","forEach","item","index","parseFloat","percentages","result","entries","Object","sorted","sort","a","b","newRows","classes","columns","field","headerName","filed","map","element","ETFStock","ValueShare","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { FlexBox } from \"react-styled-flex\";\nimport { DataGrid } from '@mui/x-data-grid';\n\nimport Button from '@material-ui/core/Button';\n\nimport {Inputs,ButtonStyle,IDK, FlexItem,LastText, Title,TotalButton,ErrorLabel} from './StyledComponents.js';\n\nconst axios = require('axios');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n  \n\nfunction App(props) {\n\tconst [rows, setRows] = React.useState()\n\tconst [etfStockType, setEtfStockType] = React.useState('ETF');\n\tconst [unit, setUnit] = React.useState('Shares');\n\tconst [isValidStockTicker, setIsValidStockTicker] = useState(true);\n\tconst [isValidETFTicker, setIsValidETFTicker] = useState(true);\n\n\tasync function sendGetRequest(etfValues, etfShares, stockValues, stockShares){\n\t\tlet stocks = {};\n\t\tlet etfs = [];\n\t\tlet individualStocks=[];\n\t\tlet totalOverallValue=0;\n\t\tfor (let i=0; i<etfValues.length;i++){\n\t\t\tetfs.push({\"etf\": etfValues[i][\"ticker\"], \"value\": etfValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=etfValues[i][\"value\"];\n\t\t}\n\t\tfor (let i=0; i<etfShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${etfShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(\"H\");\n\t\t\t\tetfs.push({\"etf\": etfShares[i][\"ticker\"], \"value\": etfShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\ttotalOverallValue+=etfShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t})\n\t\t\t.catch(function (error){\n\t\t\t\tsetIsValidETFTicker(false);\n\t\t\t});;\n\t\t}\n\n\t\t//now we have [{etf:SPY, value: 200}, {etf:SPY, value: 300}]\n\t\tfor (let i=0;i<stockValues.length;i++){\n\t\t\tindividualStocks.push({\"stock\": stockValues[i][\"ticker\"], \"value\":stockValues[i][\"value\"]});\n\t\t\ttotalOverallValue+=stockValues[i][\"value\"];\n\t\t}\n\t\t\n\n\t\tfor (let i=0;i<stockShares.length;i++){\n\t\t\tawait axios.get(`https://financialmodelingprep.com/api/v3/quote-short/${stockShares[i][\"ticker\"]}?apikey=1a4f4c0ce5cd348fb5a01d33d0e1195a`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\t\n\t\t\t\t\tindividualStocks.push({\"stock\": stockShares[i][\"ticker\"], \"value\": stockShares[i][\"shares\"]*response.data[0][\"price\"]});\n\t\t\t\t\ttotalOverallValue+=stockShares[i][\"shares\"]*response.data[0][\"price\"];\n\t\t\t\t})\n\t\t\t\t.catch(function (error){\n\t\t\t\t\tsetIsValidStockTicker(false);\n\t\t\t\t});\n\t\t}\n\t\tconsole.log(totalOverallValue);\n\t\t//now we have [{stock:AAPL, value 50}, {stock:MSFT, value 50}]\n\t\tfor(let i=0 ;i<etfs.length;i++){\n\t\t\tawait axios.get(`https://fmpcloud.io/api/v3/etf-holder/${etfs[i][\"etf\"]}?apikey=863b5080b597b86a6bfab2088844d00a`)\n\t\t\t.then((response) => {\n\t\t\t\tfor (let j=0;j<response.data.length;j++){\n\t\t\t\t\tstocks[response.data[j][\"asset\"]] = stocks[response.data[j][\"asset\"]] ? [((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue + stocks[response.data[j][\"asset\"]],(((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue + stocks[response.data[j][\"asset\"]])*totalOverallValue] : [((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue,(((response.data[j][\"weightPercentage\"]/100)*etfs[i][\"value\"])/totalOverallValue)*totalOverallValue];\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (error){\n\t\t\t\tsetIsValidETFTicker(false);\n\t\t\t});;       \n\t\t}\n\t  \n\t\tfor (let i=0;i<individualStocks.length;i++){\n\t\t\tstocks[individualStocks[i][\"stock\"]] = stocks[individualStocks[i][\"stock\"]] ? [individualStocks[i][\"value\"]/totalOverallValue + stocks[individualStocks[i][\"stock\"]],(individualStocks[i][\"value\"]/totalOverallValue + stocks[individualStocks[i][\"stock\"]])*totalOverallValue]: [individualStocks[i][\"value\"]/totalOverallValue,(individualStocks[i][\"value\"]/totalOverallValue)*totalOverallValue];\n\t\t}\n\t\tconsole.log(stocks)\n\t\t\n\t\treturn stocks;\n\t\t\n\t};\n\t\n\t\n\t\n\tconst [formValues, setFormValues] = useState([{ \"type\": \"ETF\", \"ETFStock\" : \"\", \"value\":\"Shares\", \"ValueShare\":\"\"}])\n\tfunction createData(id,ticker, percent, totalVal) {\n\t\treturn {\n\t\t  id,\n\t\t  ticker,\n\t\t  percent,\n\t\t  totalVal,\n\t\t};\n\t  }\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n\t\tsetFormValues(newFormValues);\n\t\t// setEtfStockType(newFormValues[i][\"type\"]);\n\t\t// setUnit(newFormValues[i][\"value\"])\n\t  }\n\t\n    \n    let addFormFields = () => {\n\t\tsetFormValues([...formValues, { \"type\": \"ETF\", \"ETFStock\" : \"\", \"value\":\"Shares\", \"ValueShare\":\"\"}])\n\t\tsetIsNumber(true);\n\t\tsetIsValidStockTicker(true);\n\t\tsetIsValidETFTicker(true);\n\t\tsetEmpty(false);\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n\t}\n\tfunction isNumeric(value) {\n\t\treturn /^-?\\d+$/.test(value);\n\t}\n\tconst [triedSubmit, setTriedSubmit] = useState(false);\n\tconst [empty, setEmpty] = useState(false);\n\tconst [isNumber, setIsNumber] = useState(true);\n    let handleSubmit = (event) => {\n\t\tsetIsNumber(true);\n\t\tsetIsValidStockTicker(true);\n\t\tsetIsValidETFTicker(true);\n\t\tsetEmpty(false);\n\t\tevent.preventDefault();\n\t\tsetTriedSubmit(true);\n\t\tlet getOut=false;\n\t\tformValues.forEach(function (item, index) {\n\t\t\tconsole.log(typeof(item[\"ValueShare\"]))\n\t\t\tif(item[\"ETFStock\"]===\"\" || item[\"ValueShare\"]===\"\"){\n\t\t\t\tsetEmpty(true);\n\t\t\t\tgetOut=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(isNumeric(item[\"ValueShare\"])===false){\n\t\t\t\tconsole.log(\"e\")\n\t\t\t\tsetIsNumber(false);\n\t\t\t\tgetOut=true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t});\n\t\tif(getOut===false){\n\t\t\tlet etfShares=[];\n\t\t\tlet etfValues=[];\n\t\t\tlet stockShares=[];\n\t\t\tlet stockValues=[];\n\t\t\tfor (let i=0;i<formValues.length;i++){\n\t\t\t\tif(formValues[i][\"type\"]===\"ETF\" && formValues[i][\"value\"]===\"Shares\"){\n\t\t\t\t\tetfShares.push({\"ticker\":formValues[i][\"ETFStock\"], \"shares\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t\telse if(formValues[i][\"type\"]===\"ETF\" && formValues[i][\"value\"]===\"$ Value\"){\n\t\t\t\t\tetfValues.push({\"ticker\":formValues[i][\"ETFStock\"], \"value\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t\telse if(formValues[i][\"type\"]===\"Stock\" && formValues[i][\"value\"]===\"Shares\"){\n\t\t\t\t\tstockShares.push({\"ticker\":formValues[i][\"ETFStock\"], \"shares\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t\telse if(formValues[i][\"type\"]===\"Stock\" && formValues[i][\"value\"]===\"$ Value\"){\n\t\t\t\t\tstockValues.push({\"ticker\":formValues[i][\"ETFStock\"], \"value\":parseFloat(formValues[i][\"ValueShare\"])});\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tlet percentages = sendGetRequest(etfValues, etfShares, stockValues, stockShares);\n\t\t\t\n\t\t\tpercentages.then(function(result) {\n\t\t\t\tconsole.log(result);\n\t\t\t\tlet entries = Object.entries(result);\n\n\t\t\t\tlet sorted = entries.sort((a, b) => b[1] - a[1]);\n\t\t\t\tlet newRows=[];\n\t\t\t\tfor (let i=0;i<sorted.length;i++){\n\t\t\t\t\tnewRows.push(createData(i,sorted[i][0], sorted[i][1][0],sorted[i][1][1]))\n\t\t\t\t}\n\t\t\t\tsetRows(newRows);\n\t\t\t\tconsole.log(rows)\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t\n    }\n\t\n\tconst classes = useStyles();\n\t\n\tconst columns = [\n\t\t{field: \"ticker\", headerName: \"Stock\", width:100},\n\t\t{field: \"percentage\", headerName: \"Percent of Portfolio\", width: 200},\n\t\t{filed: \"totalVal\", headerName: \"$ Value\", width:150}\n\n\t]\n\t\n\treturn (\n\t\t<div>\n\t\t\t<Title>ETF Holdings</Title>\n\t\t<IDK>\n\t\t<form  className={classes.root} onSubmit={handleSubmit}>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n\t\t\t\n\t\t\t<FlexBox justifyContent=\"center\" alignItems=\"center\">\n\t\t\t\n\t\t\t<FlexItem>\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n\t\t\t\t\tETF or Stock\n\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select name=\"type\" onChange={e => handleChange(index, e)} labelId=\"demo-simple-select-placeholder-label-label\"\n\t\t\tid=\"demo-simple-select-placeholder-label\" displayEmpty className={classes.selectEmpty} value={formValues[index][\"type\"]}>\n\t\t\t\t\t<MenuItem value=\"ETF\">ETF</MenuItem>\n\t\t\t\t\t<MenuItem value =\"Stock\">Stock</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t</FormControl>\n            </FlexItem>\n\t\t\t<FlexItem>\n              <TextField style = {{width: 150}}  id=\"outlined-basic\" variant =\"outlined\" type=\"text\" name=\"ETFStock\" value={element.ETFStock || \"\"} onChange={e => handleChange(index, e)} />\n\t\t\t  </FlexItem>\n\t\t\t<FlexItem>\n\t\t\t  <FormControl className={classes.formControl}>\n\t\t\t<InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\n\t\t\t\tUnit\n\t\t\t</InputLabel>\n\t\t\t\t<Select name=\"value\" onChange={e => handleChange(index, e)} labelId=\"demo-simple-select-placeholder-label-label\"\n          id=\"demo-simple-select-placeholder-label\" displayEmpty className={classes.selectEmpty} value={formValues[index][\"value\"]}>\n\t\t\n\t\t\t\t<MenuItem value=\"Shares\">Shares</MenuItem>\n\t\t\t\t<MenuItem value =\"$ Value\">$ Value</MenuItem>\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t\t</FlexItem>\n\t\t\t<FlexItem>\n\t\t\t\t<LastText>\n\t\t\t\t<TextField style = {{width: 150}} id=\"outlined-basic\" variant =\"outlined\" type=\"text\" name=\"ValueShare\" value={element.ValueShare || \"\"} onChange={e => handleChange(index, e)} />\n\t\t\t\t</LastText>\n\t\t\t\t</FlexItem>\n\t\t\t\t\n\t\t\t  {\n\t\t\t\tindex>0 ? \n\t\t\t\t<FlexItem>\n\t\t\t\t<Button variant=\"contained\" type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</Button>\n                </FlexItem>\n\t\t\t\t: <FlexItem><Button variant=\"contained\" disabled type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</Button></FlexItem>\n              }\n\t\t\t  </FlexBox>\n            </div>\n          ))}\n\t\t  \n\t\t  \n\t\t  \n\t\t  \n\t\t  {triedSubmit && empty? <ErrorLabel>All inputs must be filled</ErrorLabel>:  triedSubmit && isNumber===false ? <ErrorLabel>Value input must be a valid number</ErrorLabel>: triedSubmit && isValidStockTicker===false? <ErrorLabel>Ensure that it is a valid stock ticker!</ErrorLabel>:triedSubmit && isValidETFTicker===false?<ErrorLabel>Ensure that it is a valid ETF!</ErrorLabel>:\"\"}\n          \n\t\t  \n\t\t  \n\t\t  <div className=\"button-section\">\n\t\t\t  <TotalButton>\n\t\t\t  <ButtonStyle>\n\t\t\t<Button style = {{width: 120}, {height:45}}  variant=\"contained\" color=\"primary\" className=\"button add\" type=\"button\" onClick={() => addFormFields()}>\n\t\t\t\tAdd\n\t\t\t</Button>\n\t\t\t</ButtonStyle>\n\t\t\t<Button style = {{width: 120}, {height:45}}  variant=\"contained\" color=\"primary\" className=\"button submit\" type=\"submit\">\n\t\t\t\tSubmit\n\t\t\t</Button>\n\t\t\t</TotalButton>\n          </div>\n\t\t\n      </form>\n\t  \n\t  </IDK>\n\n\t  <div style={{ height: 400, width: '50%' }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n\t\trowsPerPageOptions={[5]}\n      />\n    </div>\t\n\t  </div>\n\t  \n  \t);\n}\t\t\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}