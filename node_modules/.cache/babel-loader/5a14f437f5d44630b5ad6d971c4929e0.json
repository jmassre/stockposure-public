{"ast":null,"code":"var _jsxFileName = \"/Users/joey/Desktop/etf-holdings-site/src/TableCustom.js\",\n    _s = $RefreshSig$();\n\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { ButtonStyle, TopFlex, FlexItem, LastText, Title, TotalButton, ErrorLabel, SubTitle, PageColor } from './StyledComponents.js';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableCustom(props) {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: props.columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.rows.slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: props.columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: props.rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TableCustom, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = TableCustom;\nexport default TableCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCustom\");","map":{"version":3,"sources":["/Users/joey/Desktop/etf-holdings-site/src/TableCustom.js"],"names":["Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","ButtonStyle","TopFlex","FlexItem","LastText","Title","TotalButton","ErrorLabel","SubTitle","PageColor","React","TableCustom","props","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","columns","map","column","align","minWidth","label","id","rows","slice","row","format","code","length"],"mappings":"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","sourcesContent":["import Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport {ButtonStyle,TopFlex, FlexItem,LastText, Title,TotalButton,ErrorLabel,SubTitle, PageColor} from './StyledComponents.js';\nimport * as React from 'react';\n\n\nfunction TableCustom(props){\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const handleChangePage = (event, newPage) => {\n\t\tsetPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n\t\tsetRowsPerPage(+event.target.value);\n\t\tsetPage(0);\n\t};\n    return(\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <TableContainer sx={{ maxHeight: 500 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                    <TableRow>\n                    {props.columns.map((column) => (\n                        <TableCell\n                        key={column.id}\n                        align={column.align}\n                        style={{ minWidth: column.minWidth }}\n                        >\n                        {column.label}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.rows\n                    .slice(props.page * props.rowsPerPage, props.page * props.rowsPerPage + props.rowsPerPage)\n                    .map((row) => {\n                        return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                            {props.columns.map((column) => {\n                            const value = row[column.id];\n                            return (\n                                <TableCell key={column.id} align={column.align}>\n                                {column.format && typeof value === 'number'\n                                    ? column.format(value)\n                                    : value}\n                                </TableCell>\n                            );\n                            })}\n                        </TableRow>\n                        );\n                    })}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={props.rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    )\n\n\n}\n\nexport default TableCustom;"]},"metadata":{},"sourceType":"module"}